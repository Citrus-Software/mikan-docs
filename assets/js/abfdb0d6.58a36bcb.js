"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[436],{28:(e,n,i)=>{i.d(n,{A:()=>s});const s=i.p+"assets/images/rechain_graph-4f9e7e215f770a9640ca877041ba9cc5.png"},1995:(e,n,i)=>{i.d(n,{A:()=>s});const s=i.p+"assets/images/rechain_subchain-414076fbcffdddd6ce56d3cabebecfbb.png"},2103:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>a,contentTitle:()=>c,default:()=>h,frontMatter:()=>o,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"references/mod/rig/rechain","title":"rig.rechain","description":"Recreates a virtual FK chain hierarchy over disconnected or constrained nodes.","source":"@site/docs/references/mod/rig/rechain.md","sourceDirName":"references/mod/rig","slug":"/references/mod/rig/rechain","permalink":"/mikan-docs/docs/references/mod/rig/rechain","draft":false,"unlisted":false,"editUrl":"https://github.com/citrus-software/mikan-docs/tree/main/packages/create-docusaurus/templates/shared/docs/references/mod/rig/rechain.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"rig.path","permalink":"/mikan-docs/docs/references/mod/rig/path"},"next":{"title":"rig.rivet","permalink":"/mikan-docs/docs/references/mod/rig/rivet"}}');var r=i(4848),t=i(8453);const o={},c="rig.rechain",a={},l=[{value:"Options",id:"options",level:2},{value:"Examples",id:"examples",level:2},{value:"Multiple subchains driven by a main chain",id:"multiple-subchains-driven-by-a-main-chain",level:3},{value:"Virtual hierarchy between riveted joints",id:"virtual-hierarchy-between-riveted-joints",level:3}];function d(e){const n={blockquote:"blockquote",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"rigrechain",children:"rig.rechain"})}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsx)(n.p,{children:"Recreates a virtual FK chain hierarchy over disconnected or constrained nodes."}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"This modifier allows you to rebuild an FK-style hierarchy virtually, useful for setups like FK joints constrained to rivets, where real parenting is not possible. It supports both a legacy and a new, more explicit method."}),"\n",(0,r.jsx)(n.h2,{id:"options",children:"Options"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"name"})})," (",(0,r.jsx)(n.em,{children:"str"}),", optional): Base name used to generate the IDs of the virtual nodes."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"weight"})})," (",(0,r.jsx)(n.em,{children:"bool"}),", optional): Adds a weight attribute to enable/disable the transformation constraint (default: ",(0,r.jsx)(n.code,{children:"true"}),")."]}),"\n"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"ctrls"})})," (",(0,r.jsx)(n.em,{children:"list[node]"}),"): List of controller nodes representing the FK chain."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"roots"})})," (",(0,r.jsx)(n.em,{children:"list[node]"}),", optional): Corresponding roots for each controller (only needed if controller matrices aren't complete)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"nodes"})})," (",(0,r.jsx)(n.em,{children:"list[node]"}),"): List of nodes to be constrained, typically the roots following each controller."]}),"\n"]}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:["\u26a0\ufe0f Only the local matrix is connected in this method. If using transform hierarchies instead of FK controllers, specify the ",(0,r.jsx)(n.code,{children:"roots"})," list."]}),"\n"]}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:["\u26a0\ufe0f When using default.bones templates, make sure the ",(0,r.jsx)(n.code,{children:"nodes"})," list only includes root nodes. The modifier will not work with other types."]}),"\n"]}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsx)(n.p,{children:"\u26a0\ufe0f For riveted joints, make sure the hierarchy is broken and nodes are reparented to avoid unwanted scale propagation."}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"DAG graph how rechain works",src:i(28).A+"",width:"1056",height:"278"})}),"\n",(0,r.jsx)(n.h2,{id:"examples",children:"Examples"}),"\n",(0,r.jsx)(n.h3,{id:"multiple-subchains-driven-by-a-main-chain",children:"Multiple subchains driven by a main chain"}),"\n",(0,r.jsx)(n.p,{children:"To animate multiple subchains using a main chain, start by breaking the original hierarchy:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yml",children:"# Disconnect subchain controllers and parent them to the main chain hooks\n#> n: [0, 1, 2, 3, 4]\nparent: subchain.L::roots.<n> chain::hooks.<n>\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Then use ",(0,r.jsx)(n.code,{children:"rechain"})," to rebuild the desired FK behavior:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yml",children:"rig.rechain:\n  roots:\n    - subchain.L::roots.0\n    - subchain.L::roots.1\n    - subchain.L::roots.2\n    - subchain.L::roots.3\n  ctrls:\n    - subchain.L::skin.0\n    - subchain.L::skin.1\n    - subchain.L::skin.2\n    - subchain.L::skin.3\n  nodes:\n    - subchain.L::roots.1\n    - subchain.L::roots.2\n    - subchain.L::roots.3\n    - subchain.L::roots.4\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"viewport example",src:i(1995).A+"",width:"871",height:"289"})}),"\n",(0,r.jsx)(n.h3,{id:"virtual-hierarchy-between-riveted-joints",children:"Virtual hierarchy between riveted joints"}),"\n",(0,r.jsx)(n.p,{children:"Here, joint1 controls joint2, and joint2 controls joint3:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yml",children:"rig.rechain:\n  ctrls:\n    - joint1::skin.0\n    - joint2::skin.0\n  nodes:\n    - joint2::roots.0\n    - joint3::roots.0\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"viewport example",src:i(7013).A+"",width:"993",height:"194"})})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},7013:(e,n,i)=>{i.d(n,{A:()=>s});const s=i.p+"assets/images/rechain_rivets-bab56dcd9d7e1ebfa9b6b16650c6db4f.png"},8453:(e,n,i)=>{i.d(n,{R:()=>o,x:()=>c});var s=i(6540);const r={},t=s.createContext(r);function o(e){const n=s.useContext(t);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),s.createElement(t.Provider,{value:n},e.children)}}}]);