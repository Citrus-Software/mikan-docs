"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[1620],{3358:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>l,contentTitle:()=>i,default:()=>h,frontMatter:()=>c,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"references/mod/rig/path","title":"rig.path","description":"Attaches one or more nodes to a curve, similar to a motion path setup.","source":"@site/docs/references/mod/rig/path.md","sourceDirName":"references/mod/rig","slug":"/references/mod/rig/path","permalink":"/mikan-docs/docs/references/mod/rig/path","draft":false,"unlisted":false,"editUrl":"https://github.com/citrus-software/mikan-docs/tree/main/packages/create-docusaurus/templates/shared/docs/references/mod/rig/path.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"rig.muscle","permalink":"/mikan-docs/docs/references/mod/rig/muscle"},"next":{"title":"rig.rechain","permalink":"/mikan-docs/docs/references/mod/rig/rechain"}}');var o=r(4848),s=r(8453);const c={},i="rig.path",l={},d=[{value:"Options",id:"options",level:2},{value:"Examples",id:"examples",level:2},{value:"Basic path attachment",id:"basic-path-attachment",level:3},{value:"Motion path with animatable percentage-based parameter",id:"motion-path-with-animatable-percentage-based-parameter",level:3}];function a(e){const n={blockquote:"blockquote",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"rigpath",children:"rig.path"})}),"\n",(0,o.jsxs)(n.blockquote,{children:["\n",(0,o.jsx)(n.p,{children:"Attaches one or more nodes to a curve, similar to a motion path setup."}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:"This modifier allows a node (or several) to follow a curve, optionally supporting features like parameter override, percentage-based sliding, or closest-point constraints. It\u2019s typically used for effects like objects sliding along surfaces or for attaching geometry to motion paths."}),"\n",(0,o.jsx)(n.h2,{id:"options",children:"Options"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:(0,o.jsx)(n.code,{children:"geo"})})," (",(0,o.jsx)(n.em,{children:"node"}),"): The curve (geometry) the path will follow."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:(0,o.jsx)(n.code,{children:"node"})})," (",(0,o.jsx)(n.em,{children:"node"}),"): Node attached to the path. Used by default to calculate the initial curve parameter."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:(0,o.jsx)(n.code,{children:"nodes"})})," (",(0,o.jsx)(n.em,{children:"list[node]"}),", optional): List of nodes to create multiple path attachments at once."]}),"\n"]}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:(0,o.jsx)(n.code,{children:"u"})})," (",(0,o.jsx)(n.em,{children:"float"}),", optional): Overrides the default curve parameter. By default, calculated by projecting the node on the curve."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:(0,o.jsx)(n.code,{children:"percent"})})," (",(0,o.jsx)(n.em,{children:"bool"}),", optional): Uses a 0-1 normalized curve length instead of the parametric ",(0,o.jsx)(n.code,{children:"u"}),". Disabled by default."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:(0,o.jsx)(n.code,{children:"length"})})," (",(0,o.jsx)(n.em,{children:"bool"}),", optional): Enables distance-based parameterization for slide effects. Disables Maya-style up object."]}),"\n"]}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:(0,o.jsx)(n.code,{children:"parent"})})," (",(0,o.jsx)(n.em,{children:"node"}),"): Parent for the generated path. Defaults to the parent of ",(0,o.jsx)(n.code,{children:"node"}),"."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:(0,o.jsx)(n.code,{children:"hook"})})," (",(0,o.jsx)(n.em,{children:"bool"}),", default: on): Whether the node should be reparented under the path."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:(0,o.jsx)(n.code,{children:"snap"})})," (",(0,o.jsx)(n.em,{children:"bool"}),", default: off): Resets the node under the path transform (zeroes transform)."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:(0,o.jsx)(n.code,{children:"attach"})})," (",(0,o.jsx)(n.em,{children:"node"}),", optional): Node used as the source to compute the initial curve parameter."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:(0,o.jsx)(n.code,{children:"closest"})})," (",(0,o.jsx)(n.em,{children:"node"}),", optional): Similar to ",(0,o.jsx)(n.code,{children:"attach"}),", but remains dynamic. Parameter is driven by projection of this node."]}),"\n"]}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:(0,o.jsx)(n.code,{children:"flip"})})," (",(0,o.jsx)(n.em,{children:"bool"}),", default: off): Inverts forward and up vectors for mirrored branches."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:(0,o.jsx)(n.code,{children:"forward_vector"})})," (",(0,o.jsx)(n.em,{children:"str"})," | ",(0,o.jsx)(n.em,{children:"vector"}),", optional): Forward direction for orientation (default: ",(0,o.jsx)(n.code,{children:"x"}),"). Accepts string like ",(0,o.jsx)(n.code,{children:"x"}),", ",(0,o.jsx)(n.code,{children:"-z"}),", or vector like ",(0,o.jsx)(n.code,{children:"[1, 0, 0]"}),"."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:(0,o.jsx)(n.code,{children:"up_vector"})})," (",(0,o.jsx)(n.em,{children:"str"})," | ",(0,o.jsx)(n.em,{children:"vector"}),", optional): Up direction. If not set, falls back to defaults based on ",(0,o.jsx)(n.code,{children:"up_object_vector"})," or ",(0,o.jsx)(n.code,{children:"up_object"}),"."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:(0,o.jsx)(n.code,{children:"up_object_vector"})})," (",(0,o.jsx)(n.em,{children:"str"})," | ",(0,o.jsx)(n.em,{children:"vector"}),", optional): Absolute up vector. Used if ",(0,o.jsx)(n.code,{children:"up_object"})," is not specified."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:(0,o.jsx)(n.code,{children:"up_object"})})," (",(0,o.jsx)(n.em,{children:"node"}),", optional): Node providing world reference for up orientation. Used in Maya-style path constraints if no ",(0,o.jsx)(n.code,{children:"up_object_vector"}),"."]}),"\n"]}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:(0,o.jsx)(n.code,{children:"geo_up"})})," (",(0,o.jsx)(n.em,{children:"node"}),", optional): Secondary curve used to place a locator for ",(0,o.jsx)(n.code,{children:"up_object"})," reference."]}),"\n"]}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h2,{id:"examples",children:"Examples"}),"\n",(0,o.jsx)(n.h3,{id:"basic-path-attachment",children:"Basic path attachment"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yml",children:"[mod]\nrig.path:\n  geo: cv_necklace->shape\n  node: necklace01::roots.0\n"})}),"\n",(0,o.jsx)(n.h3,{id:"motion-path-with-animatable-percentage-based-parameter",children:"Motion path with animatable percentage-based parameter"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yml",children:"[mod]\nplug:\n  node: bone::ctrls.0\n  anim_path:\n    type: float\n    k: on\n    min: 0\n    max: 1\n\nrig.path:\n  geo: crv_path->shape\n  percent: on\n\nconnect:\n  input: bone::ctrls.0@anim_path\n  node: bone::mod.path.0@u\n"})}),"\n",(0,o.jsxs)(n.p,{children:["This setup allows the controller ",(0,o.jsx)(n.code,{children:"bone::ctrls.0"})," to slide along ",(0,o.jsx)(n.code,{children:"crv_path"}),", controlled by the ",(0,o.jsx)(n.code,{children:"anim_path"})," float attribute (ranging from 0 to 1)."]})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(a,{...e})}):a(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>c,x:()=>i});var t=r(6540);const o={},s=t.createContext(o);function c(e){const n=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:c(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);