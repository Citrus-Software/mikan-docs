"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[8989],{3477:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>l,contentTitle:()=>d,default:()=>h,frontMatter:()=>i,metadata:()=>s,toc:()=>a});const s=JSON.parse('{"id":"references/mod/vdag","title":"vdag","description":"Modifies virtual parent relationships between nodes in the rig.","source":"@site/docs/references/mod/vdag.md","sourceDirName":"references/mod","slug":"/references/mod/vdag","permalink":"/mikan-docs/references/mod/vdag","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"tag","permalink":"/mikan-docs/references/mod/tag"}}');var o=r(4848),t=r(8453);const i={},d="vdag",l={},a=[{value:"Options",id:"options",level:2},{value:"Example",id:"example",level:2}];function c(e){const n={blockquote:"blockquote",code:"code",em:"em",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"vdag",children:"vdag"})}),"\n",(0,o.jsxs)(n.blockquote,{children:["\n",(0,o.jsx)(n.p,{children:"Modifies virtual parent relationships between nodes in the rig."}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:"This modifier allows you to redefine virtual parent-child links independently of the actual scene hierarchy. Useful for advanced rig setups where logical relationships differ from transform parenting."}),"\n",(0,o.jsx)(n.h2,{id:"options",children:"Options"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:(0,o.jsx)(n.code,{children:"node"})}),", ",(0,o.jsx)(n.strong,{children:(0,o.jsx)(n.code,{children:"nodes"})})," (",(0,o.jsx)(n.em,{children:"node"})," | ",(0,o.jsx)(n.em,{children:"list[node]"}),"): Nodes whose virtual parenting will be modified."]}),"\n"]}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:(0,o.jsx)(n.code,{children:"parent"})})," (",(0,o.jsx)(n.em,{children:"node"}),"): The virtual parent to assign."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:(0,o.jsx)(n.code,{children:"closest"})})," (",(0,o.jsx)(n.em,{children:"list[node]"}),"): A list of fallback virtual parents or related nodes used for proximity-based logic."]}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"example",children:"Example"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yml",children:"[mod]\nvdag:\n  nodes:\n    - eyebrow.L::hooks.outer\n    - eyebrow.L::hooks.mid\n  parent: head::hooks.eyebrow\n"})}),"\n",(0,o.jsx)(n.p,{children:"This will reassign the virtual parent of the eyebrow hook nodes to the eyebrow driver on the head."})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(c,{...e})}):c(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>i,x:()=>d});var s=r(6540);const o={},t=s.createContext(o);function i(e){const n=s.useContext(t);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),s.createElement(t.Provider,{value:n},e.children)}}}]);