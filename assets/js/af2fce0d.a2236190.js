"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[5454],{5276:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>t,contentTitle:()=>o,default:()=>h,frontMatter:()=>r,metadata:()=>l,toc:()=>c});const l=JSON.parse('{"id":"references/mod/plug","title":"plug","description":"Edits or adds plugs (attributes) to one or more nodes.","source":"@site/docs/references/mod/plug.md","sourceDirName":"references/mod","slug":"/references/mod/plug","permalink":"/mikan-docs/docs/references/mod/plug","draft":false,"unlisted":false,"editUrl":"https://github.com/citrus-software/mikan-docs/tree/main/packages/create-docusaurus/templates/shared/docs/references/mod/plug.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"parent","permalink":"/mikan-docs/docs/references/mod/parent"},"next":{"title":"reset","permalink":"/mikan-docs/docs/references/mod/reset"}}');var i=s(4848),d=s(8453);const r={},o="plug",t={},c=[{value:"Options",id:"options",level:2},{value:"Examples",id:"examples",level:2},{value:"Add a boolean plug and make it keyable",id:"add-a-boolean-plug-and-make-it-keyable",level:3},{value:"Assign a simple static value",id:"assign-a-simple-static-value",level:3},{value:"Add multiple animated plugs with min/max constraints",id:"add-multiple-animated-plugs-with-minmax-constraints",level:3},{value:"Create an enum plug",id:"create-an-enum-plug",level:3},{value:"Create a proxy plug",id:"create-a-proxy-plug",level:3}];function a(e){const n={blockquote:"blockquote",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,d.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"plug",children:"plug"})}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsx)(n.p,{children:"Edits or adds plugs (attributes) to one or more nodes."}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"plug"})," modifier allows the creation, editing, or deletion of attributes on rig nodes. It's especially useful for exposing controls to animators, adjusting values, or mirroring behavior."]}),"\n",(0,i.jsx)(n.h2,{id:"options",children:"Options"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"node"})}),", ",(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"nodes"})})," (",(0,i.jsx)(n.em,{children:"node"})," | ",(0,i.jsx)(n.em,{children:"list[node]"}),"): The target node(s) on which the plugs will be edited or created."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"<plug_name>"})})," (",(0,i.jsx)(n.em,{children:"dict"})," | ",(0,i.jsx)(n.em,{children:"value"}),"): Each plug is defined by its name and configuration. A shorthand form (",(0,i.jsx)(n.code,{children:"<plug_name>: <value>"}),") is accepted to directly set a simple value.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"type"})})," (",(0,i.jsx)(n.em,{children:"str"}),", default: ",(0,i.jsx)(n.code,{children:"float"}),"): The data type of the plug. Required if the plug doesn't exist yet.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Valid values: ",(0,i.jsx)(n.code,{children:"float"}),", ",(0,i.jsx)(n.code,{children:"int"}),", ",(0,i.jsx)(n.code,{children:"bool"}),", ",(0,i.jsx)(n.code,{children:"enum"})]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"set"})})," (",(0,i.jsx)(n.em,{children:"float"})," | ",(0,i.jsx)(n.em,{children:"int"})," | ",(0,i.jsx)(n.em,{children:"bool"}),"): Assigns the plug a value."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"keyable"})}),", ",(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"k"})}),", ",(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"show"})})," (",(0,i.jsx)(n.em,{children:"bool"}),", default: ",(0,i.jsx)(n.code,{children:"off"}),"): Makes the plug visible and keyable for animation."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"hide"})})," (",(0,i.jsx)(n.em,{children:"bool"}),", default: ",(0,i.jsx)(n.code,{children:"off"}),"): Hides the plug from animation."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"min"})})," (",(0,i.jsx)(n.em,{children:"float"})," | ",(0,i.jsx)(n.em,{children:"int"}),"): Sets a minimum value."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"max"})})," (",(0,i.jsx)(n.em,{children:"float"})," | ",(0,i.jsx)(n.em,{children:"int"}),"): Sets a maximum value."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"nice_name"})})," (",(0,i.jsx)(n.em,{children:"str"}),"): UI-friendly display name."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"enum"})})," (",(0,i.jsx)(n.em,{children:"list[str]"}),"): List of values for enum-type plugs."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"lock"})})," (",(0,i.jsx)(n.em,{children:"bool"}),", default: ",(0,i.jsx)(n.code,{children:"off"}),"): Locks the plug to prevent editing."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"flip"})})," (",(0,i.jsx)(n.em,{children:"bool"}),", default: ",(0,i.jsx)(n.code,{children:"off"}),"): Multiplies ",(0,i.jsx)(n.code,{children:"set"}),", ",(0,i.jsx)(n.code,{children:"min"}),", and ",(0,i.jsx)(n.code,{children:"max"})," values by ",(0,i.jsx)(n.code,{children:"-1"})," on mirrored branches."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"proxy"})})," (",(0,i.jsx)(n.em,{children:"node"}),"): Creates a proxy attribute\u2014shared value between two different nodes."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"examples",children:"Examples"}),"\n",(0,i.jsx)(n.h3,{id:"add-a-boolean-plug-and-make-it-keyable",children:"Add a boolean plug and make it keyable"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yml",children:"[mod]\nplug:\n  node: leaf_base::ctrls.0\n  toto:\n    type: bool\n    set: on\n    keyable: on\n"})}),"\n",(0,i.jsx)(n.h3,{id:"assign-a-simple-static-value",children:"Assign a simple static value"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yml",children:"[mod]\nplug:\n  node: msh_wonderbra->xfo\n  vis: off\n"})}),"\n",(0,i.jsx)(n.h3,{id:"add-multiple-animated-plugs-with-minmax-constraints",children:"Add multiple animated plugs with min/max constraints"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yml",children:"[mod]\nplug:\n  node: shp_face::node\n  m_open: {type: float, k: on}\n  m_close: {type: float, k: on}\n  t.x: {set: 2, min: 0, max: 5, k: 0}\n"})}),"\n",(0,i.jsx)(n.h3,{id:"create-an-enum-plug",children:"Create an enum plug"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yml",children:"[mod]\nplug:\n  node: camera::ctrls.camera\n  mask:\n    type: enum\n    enum: ['16/9', '4/3']\n    keyable: on\n"})}),"\n",(0,i.jsx)(n.h3,{id:"create-a-proxy-plug",children:"Create a proxy plug"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yml",children:"[mod]\nplug:\n  node: source::ctrls.0\n  weight:\n    type: float\n    k: on\n\nplug:\n  node: target::ctrls.0\n  weight:\n    type: float\n    proxy: source::ctrls.0@weight\n"})})]})}function h(e={}){const{wrapper:n}={...(0,d.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(a,{...e})}):a(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>r,x:()=>o});var l=s(6540);const i={},d=l.createContext(i);function r(e){const n=l.useContext(d);return l.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),l.createElement(d.Provider,{value:n},e.children)}}}]);