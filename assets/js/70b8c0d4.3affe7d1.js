"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[6793],{2812:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>o,contentTitle:()=>d,default:()=>h,frontMatter:()=>l,metadata:()=>s,toc:()=>a});const s=JSON.parse('{"id":"usage/blueprints","title":"Template Blueprints","description":"Mikan is a modular rigging engine built around explicit rig construction hierarchies. Its main units are templates, enriched with modifiers and deformers, and organized under a unified structure in Maya.","source":"@site/docs/usage/blueprints.md","sourceDirName":"usage","slug":"/usage/blueprints","permalink":"/mikan-docs/usage/blueprints","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"tutorialSidebar","previous":{"title":"Quickstart Guide","permalink":"/mikan-docs/introduction/quickstart"},"next":{"title":"Modifiers and IDs","permalink":"/mikan-docs/usage/modifiers"}}');var r=i(4848),t=i(8453);const l={sidebar_position:1},d="Template Blueprints",o={},a=[{value:"Asset &amp; Hierarchy",id:"asset--hierarchy",level:2},{value:"Templates Modules",id:"templates-modules",level:2},{value:"Role &amp; Structure",id:"role--structure",level:3},{value:"Creation &amp; Editing",id:"creation--editing",level:3},{value:"Options",id:"options",level:3},{value:"Output (Hooks)",id:"output-hooks",level:3},{value:"Branches &amp; Symmetry",id:"branches--symmetry",level:3},{value:"Branch Visualization &amp; Editing",id:"branch-visualization--editing",level:3},{value:"Helper Nodes",id:"helper-nodes",level:2},{value:"Scheduler &amp; Build Process",id:"scheduler--build-process",level:2},{value:"Build Flow:",id:"build-flow",level:3},{value:"Execution Rules:",id:"execution-rules",level:3},{value:"Build Modes",id:"build-modes",level:2},{value:"Mode Categories",id:"mode-categories",level:3},{value:"Development",id:"development",level:4},{value:"Production Targets",id:"production-targets",level:4},{value:"Host-Specific",id:"host-specific",level:4},{value:"How to Use Modes",id:"how-to-use-modes",level:3},{value:"Syntax",id:"syntax",level:4},{value:"Example: Bind Pose vs Animation Pose",id:"example-bind-pose-vs-animation-pose",level:3}];function c(e){const n={blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",ol:"ol",p:"p",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"template-blueprints",children:"Template Blueprints"})}),"\n",(0,r.jsxs)(n.p,{children:["Mikan is a modular rigging engine built around explicit rig construction hierarchies. Its main units are ",(0,r.jsx)(n.strong,{children:"templates"}),", enriched with ",(0,r.jsx)(n.strong,{children:"modifiers"})," and ",(0,r.jsx)(n.strong,{children:"deformers"}),", and organized under a unified structure in Maya."]}),"\n",(0,r.jsxs)(n.p,{children:["Each rig is encapsulated in an ",(0,r.jsx)(n.strong,{children:"Asset"}),", which acts as the top node containing and orchestrating the entire build process."]}),"\n",(0,r.jsx)(n.h2,{id:"asset--hierarchy",children:"Asset & Hierarchy"}),"\n",(0,r.jsxs)(n.p,{children:["An ",(0,r.jsx)(n.strong,{children:"Asset"})," is the root node for a rig in Maya. It holds all the elements required for construction: templates, modifiers, deformers, and helper nodes."]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Assets can coexist in the same scene."}),"\n",(0,r.jsx)(n.li,{children:"Each Blueprint can be exported using a hierarchical 3D format (e.g., Alembic)."}),"\n",(0,r.jsxs)(n.li,{children:["All elements must be parented under the Asset's ",(0,r.jsx)(n.code,{children:"template"})," group to be considered part of the template."]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"The Asset node schedules the build process and controls the execution order."}),"\n",(0,r.jsx)(n.h2,{id:"templates-modules",children:"Templates Modules"}),"\n",(0,r.jsx)(n.h3,{id:"role--structure",children:"Role & Structure"}),"\n",(0,r.jsx)(n.p,{children:"Template modules are the building blocks of the rig. Each template:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Has a unique ",(0,r.jsx)(n.strong,{children:"ID"})," within the Asset."]}),"\n",(0,r.jsxs)(n.li,{children:["Is defined by a ",(0,r.jsx)(n.strong,{children:"root node"})," (blue in Maya) and its internal hierarchy."]}),"\n",(0,r.jsx)(n.li,{children:"Ends where another template begins."}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["All construction data is stored on the root node (ID, options, etc.). Child nodes under the template root are considered part of it unless explicitly hidden using a name starting with ",(0,r.jsx)(n.code,{children:"_"}),"."]}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:["\u26a0\ufe0f Nodes with ",(0,r.jsx)(n.code,{children:"_"})," are treated as ",(0,r.jsx)(n.strong,{children:"helper"})," and ignored during parsing."]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"The root node is critical:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"It defines the existence of the template."}),"\n",(0,r.jsxs)(n.li,{children:["It stores all configuration attributes (prefixed with ",(0,r.jsx)(n.code,{children:"gem_"}),")."]}),"\n"]}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:["\ud83d\udd39 The ",(0,r.jsx)(n.code,{children:"gem_"}),' prefix originates from the original engine name "Gemini" and is preserved for compatibility.']}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Template modules can be easily identified by their blue color in Maya\u2019s Outliner."}),"\n",(0,r.jsx)(n.h3,{id:"creation--editing",children:"Creation & Editing"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Templates are created via the ",(0,r.jsx)(n.strong,{children:'"Add"'})," tab in the Template UI."]}),"\n",(0,r.jsx)(n.li,{children:"The name defines the node IDs and must be unique within the Asset."}),"\n",(0,r.jsx)(n.li,{children:"Hierarchies can be modified in the Maya scene (e.g., reparent the root, add children)."}),"\n",(0,r.jsx)(n.li,{children:"Changing a template's type is more complex as it may require adapting its structure."}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["Templates can also be imported as Maya ",(0,r.jsx)(n.strong,{children:"references"})," and follow the same construction rules."]}),"\n",(0,r.jsx)(n.h3,{id:"options",children:"Options"}),"\n",(0,r.jsxs)(n.p,{children:["Each template instance has configurable ",(0,r.jsx)(n.strong,{children:"options"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Modified values are stored on the root node as attributes (",(0,r.jsx)(n.code,{children:"gem_opt_*"}),")."]}),"\n",(0,r.jsxs)(n.li,{children:["Options are shown in ",(0,r.jsx)(n.strong,{children:"blue"})," in the interface if modified."]}),"\n",(0,r.jsxs)(n.li,{children:["If the value is reset to default, the label turns ",(0,r.jsx)(n.strong,{children:"dark blue"}),", but the attribute still exists."]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"output-hooks",children:"Output (Hooks)"}),"\n",(0,r.jsxs)(n.p,{children:["When the rig is built, each joint in a template receives a corresponding ",(0,r.jsx)(n.strong,{children:"rig node"}),", referred to as a ",(0,r.jsx)(n.strong,{children:"hook"}),"."]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"These hooks determine how template hierarchies are connected."}),"\n",(0,r.jsx)(n.li,{children:"A child template\u2019s rig will be parented under its parent\u2019s hook."}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"branches--symmetry",children:"Branches & Symmetry"}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"branches"})," option allows duplicating a template multiple times with the same configuration. Commonly used for ",(0,r.jsx)(n.strong,{children:"symmetry"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Each branch is identified by a ",(0,r.jsx)(n.strong,{children:"suffix"})," (e.g., ",(0,r.jsx)(n.code,{children:"L"}),", ",(0,r.jsx)(n.code,{children:"R"}),")."]}),"\n",(0,r.jsx)(n.li,{children:"Branches are created temporarily during build and destroyed unless retained for asymmetry."}),"\n",(0,r.jsxs)(n.li,{children:["Symmetry is automatically recognized for suffix pairs: ",(0,r.jsx)(n.code,{children:"L/R"}),", ",(0,r.jsx)(n.code,{children:"up/dn"}),", ",(0,r.jsx)(n.code,{children:"ft/bk"}),"."]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Mirrored branches automatically invert axes and apply the necessary flipping to joints and controllers."}),"\n",(0,r.jsx)(n.h3,{id:"branch-visualization--editing",children:"Branch Visualization & Editing"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Use the context menu option ",(0,r.jsx)(n.strong,{children:'"Build template branches"'})," to generate temporary branches."]}),"\n",(0,r.jsx)(n.li,{children:"These branches are visible in the Outliner and show where the rig will be constructed."}),"\n",(0,r.jsx)(n.li,{children:"These preview branches are destroyed on the next build unless explicitly frozen."}),"\n",(0,r.jsxs)(n.li,{children:["To freeze branch placement, switch branches to edit mode using ",(0,r.jsx)(n.strong,{children:'"Set branch edit"'})," in the context menu."]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"helper-nodes",children:"Helper Nodes"}),"\n",(0,r.jsxs)(n.p,{children:["Any node whose name begins with an underscore (",(0,r.jsx)(n.code,{children:"_"}),") is considered a ",(0,r.jsx)(n.strong,{children:"Helper Node"}),". These nodes are skipped by the template parser, meaning they are not treated as part of a module\u2019s hierarchy \u2014 but they can still be used to carry controller shapes, modifiers or deformers."]}),"\n",(0,r.jsxs)(n.p,{children:["If a node is named with double underscores (e.g. ",(0,r.jsx)(n.code,{children:"__meta__"}),"), it becomes an ",(0,r.jsx)(n.strong,{children:"Internal Helper Node"}),", completely hidden from the interface."]}),"\n",(0,r.jsx)(n.h2,{id:"scheduler--build-process",children:"Scheduler & Build Process"}),"\n",(0,r.jsx)(n.p,{children:"Mikan scans the full hierarchy and plans construction in logical order."}),"\n",(0,r.jsx)(n.h3,{id:"build-flow",children:"Build Flow:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"Traverse all template hierarchies top-down."}),"\n",(0,r.jsx)(n.li,{children:"Build structural skeleton and rig."}),"\n",(0,r.jsx)(n.li,{children:"Identify modifiers and deformers."}),"\n",(0,r.jsx)(n.li,{children:"Schedule execution."}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"execution-rules",children:"Execution Rules:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Modifiers run before deformers"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Hierarchy determines order"})," (top to bottom)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Sibling order is ignored"})," (e.g., Alembic does not preserve it)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Command priorities"})," are respected."]}),"\n",(0,r.jsxs)(n.li,{children:["Commands with missing dependencies are ",(0,r.jsx)(n.strong,{children:"retried at the end"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:["Active ",(0,r.jsx)(n.strong,{children:"build modes"})," and ",(0,r.jsx)(n.strong,{children:"node activation states"})," are evaluated."]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"build-modes",children:"Build Modes"}),"\n",(0,r.jsxs)(n.p,{children:["Mikan uses a ",(0,r.jsx)(n.strong,{children:"flexible flag-based system"})," to control construction behavior. Multiple modes can be active simultaneously."]}),"\n",(0,r.jsx)(n.p,{children:"Each mode signals the build system how to act \u2014 whether for dev, debug, or production."}),"\n",(0,r.jsx)(n.h3,{id:"mode-categories",children:"Mode Categories"}),"\n",(0,r.jsx)(n.h4,{id:"development",children:"Development"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"dev"}),": Skips cleanup final steps, easier rig inspection."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"debug"}),": Halts on first error, useful for troubleshooting."]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"These are usually combined during rigging work."}),"\n",(0,r.jsx)(n.h4,{id:"production-targets",children:"Production Targets"}),"\n",(0,r.jsx)(n.p,{children:"Defined by the pipeline. Examples:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"anim"}),": Full animation-ready build."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"layout"}),": Minimal layout/previs rig."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"render"}),": Export or rendering rig."]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["These modes help control visibility, performance, or structure depending on the context. For example, an ",(0,r.jsx)(n.code,{children:"anim"})," rig might include deformation controllers, while a ",(0,r.jsx)(n.code,{children:"layout"})," rig might not."]}),"\n",(0,r.jsxs)(n.p,{children:["\u26a0\ufe0f These modes should be defined and managed by ",(0,r.jsx)(n.strong,{children:"production"})," to match the studio\u2019s specific delivery workflows."]}),"\n",(0,r.jsx)(n.h4,{id:"host-specific",children:"Host-Specific"}),"\n",(0,r.jsx)(n.p,{children:"These are internal flags automatically enabled depending on the environment where the build is launched:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"maya"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"tangerine"})}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"They can be used for fine-tuned adjustments specific to the host application."}),"\n",(0,r.jsx)(n.h3,{id:"how-to-use-modes",children:"How to Use Modes"}),"\n",(0,r.jsx)(n.p,{children:"Modes can be added to any element of the rig template. Each element supports:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["A list of ",(0,r.jsx)(n.strong,{children:"required modes"})," (the element is built only if ",(0,r.jsx)(n.strong,{children:"all"})," are active)"]}),"\n",(0,r.jsxs)(n.li,{children:["A list of ",(0,r.jsx)(n.strong,{children:"excluded modes"})," (the element is skipped if ",(0,r.jsx)(n.strong,{children:"any"})," are active)"]}),"\n",(0,r.jsxs)(n.li,{children:["A ",(0,r.jsx)(n.strong,{children:"disable"})," flag (to skip the element regardless of modes)"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Child nodes inherit the mode settings from their parent unless overridden."}),"\n",(0,r.jsx)(n.h4,{id:"syntax",children:"Syntax"}),"\n",(0,r.jsxs)(n.p,{children:["These settings can be configured in the ",(0,r.jsx)(n.strong,{children:"Edit"})," tab of each element."]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Multiple modes: ",(0,r.jsx)(n.code,{children:"anim, render"})]}),"\n",(0,r.jsxs)(n.li,{children:["Exclusion: ",(0,r.jsx)(n.code,{children:"~debug, ~dev"})]}),"\n",(0,r.jsxs)(n.li,{children:["Disable: check the ",(0,r.jsx)(n.strong,{children:"Disable"})," box"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"example-bind-pose-vs-animation-pose",children:"Example: Bind Pose vs Animation Pose"}),"\n",(0,r.jsxs)(n.p,{children:["A common use case is separating the ",(0,r.jsx)(n.strong,{children:"technical bind pose"})," from the ",(0,r.jsx)(n.strong,{children:"final animation pose"}),". For example, a character might be delivered with a straight tail to simplify deformation setup. To match the artistic pose, a ",(0,r.jsx)(n.strong,{children:"modifier"})," applies driven keys after the bind."]}),"\n",(0,r.jsxs)(n.p,{children:["To avoid issues during rigging, condition the modifier to exclude the ",(0,r.jsx)(n.code,{children:"dev"})," mode. This prevents it from running while authoring, making iteration faster and reducing errors. At delivery time, since ",(0,r.jsx)(n.code,{children:"dev"})," mode won\u2019t be active, the final pose will be correctly applied."]})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>l,x:()=>d});var s=i(6540);const r={},t=s.createContext(r);function l(e){const n=s.useContext(t);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),s.createElement(t.Provider,{value:n},e.children)}}}]);