"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[2728],{8453:(e,n,r)=>{r.d(n,{R:()=>s,x:()=>c});var o=r(6540);const t={},i=o.createContext(t);function s(e){const n=o.useContext(i);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:s(e.components),o.createElement(i.Provider,{value:n},e.children)}},9140:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>d,contentTitle:()=>c,default:()=>h,frontMatter:()=>s,metadata:()=>o,toc:()=>l});const o=JSON.parse('{"id":"references/mod/rig/bank","title":"rig.bank","description":"Adds a \\"banking\\" (rocking/pivot shift) effect to a controller, by displacing its rotation pivot along a curve.","source":"@site/docs/references/mod/rig/bank.md","sourceDirName":"references/mod/rig","slug":"/references/mod/rig/bank","permalink":"/mikan-docs/docs/references/mod/rig/bank","draft":false,"unlisted":false,"editUrl":"https://github.com/citrus-software/mikan-docs/tree/main/packages/create-docusaurus/templates/shared/docs/references/mod/rig/bank.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"reset","permalink":"/mikan-docs/docs/references/mod/reset"},"next":{"title":"rig.jiggle","permalink":"/mikan-docs/docs/references/mod/rig/jiggle"}}');var t=r(4848),i=r(8453);const s={},c="rig.bank",d={},l=[{value:"Options",id:"options",level:2},{value:"Example",id:"example",level:2}];function a(e){const n={blockquote:"blockquote",br:"br",code:"code",em:"em",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"rigbank",children:"rig.bank"})}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsx)(n.p,{children:'Adds a "banking" (rocking/pivot shift) effect to a controller, by displacing its rotation pivot along a curve.'}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["This modifier is used under a ",(0,t.jsx)(n.code,{children:"core.bones"})," template to create a bank effect, where the control pivots shift based on their position along a given curve. It is especially useful for organic or mechanical motions like rocking feet or banking objects."]}),"\n",(0,t.jsx)(n.h2,{id:"options",children:"Options"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"target"})})," (",(0,t.jsx)(n.em,{children:"node"}),", optional): The controller that receives the bank effect.",(0,t.jsx)(n.br,{}),"\n","\u26a0\ufe0f If not specified, the modifier enters ",(0,t.jsx)(n.em,{children:"legacy mode"}),", requiring the modifier to be applied on a ",(0,t.jsx)(n.code,{children:"core.joints"})," or ",(0,t.jsx)(n.code,{children:"bones"})," template. In that mode, ",(0,t.jsx)(n.code,{children:"target"})," and ",(0,t.jsx)(n.code,{children:"parent"})," are inferred automatically."]}),"\n"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"node"})})," (",(0,t.jsx)(n.em,{children:"node"}),", optional): The node that is driven by the banking rig. Usually the deform joint or transform."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"parent"})})," (",(0,t.jsx)(n.em,{children:"node"}),", optional): The parent of the generated bank rig. Defaults to the parent of the ",(0,t.jsx)(n.code,{children:"node"}),"."]}),"\n"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"curve"})})," (",(0,t.jsx)(n.em,{children:"node"}),"): The curve used to compute the bank pivot positions. This is typically a reference profile or outline curve."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"axis"})})," (",(0,t.jsx)(n.em,{children:"str"}),', default: "y"): The axis around which the banking effect occurs (e.g. ',(0,t.jsx)(n.code,{children:"x"}),", ",(0,t.jsx)(n.code,{children:"y"}),", or ",(0,t.jsx)(n.code,{children:"z"}),")."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"name"})})," (",(0,t.jsx)(n.em,{children:"str"}),", optional): Base name for generated nodes in the banking rig. Defaults to the curve name."]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"example",children:"Example"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yml",children:"[mod]\nrig.bank:\n  curve: cv_pot->shape\n\n  target: flower_pot::ctrls\n  node: flower_pot::skin\n\n  name: flower_pot\n"})}),"\n",(0,t.jsxs)(n.p,{children:["This setup creates a banking effect for the ",(0,t.jsx)(n.code,{children:"flower_pot::ctrls"})," controller, with the effect calculated along the ",(0,t.jsx)(n.code,{children:"cv_pot"})," shape curve. The deformation is applied to the ",(0,t.jsx)(n.code,{children:"flower_pot::skin"})," node."]})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(a,{...e})}):a(e)}}}]);