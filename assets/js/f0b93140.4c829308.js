"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[8938],{7879:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>m,frontMatter:()=>d,metadata:()=>o,toc:()=>i});const o=JSON.parse('{"id":"references/mod/tag","title":"tag","description":"Adds or removes an ID tag from one or more nodes.","source":"@site/docs/references/mod/tag.md","sourceDirName":"references/mod","slug":"/references/mod/tag","permalink":"/mikan-docs/docs/references/mod/tag","draft":false,"unlisted":false,"editUrl":"https://github.com/citrus-software/mikan-docs/tree/main/packages/create-docusaurus/templates/shared/docs/references/mod/tag.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"space","permalink":"/mikan-docs/docs/references/mod/space"},"next":{"title":"vdag","permalink":"/mikan-docs/docs/references/mod/vdag"}}');var r=s(4848),t=s(8453);const d={},a="tag",c={},i=[{value:"Options",id:"options",level:2},{value:"Examples",id:"examples",level:2},{value:"Remove a tag from a single node",id:"remove-a-tag-from-a-single-node",level:3},{value:"Add a tag to a specific node",id:"add-a-tag-to-a-specific-node",level:3}];function l(e){const n={blockquote:"blockquote",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"tag",children:"tag"})}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsx)(n.p,{children:"Adds or removes an ID tag from one or more nodes."}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["This modifier is used to assign or unassign a specific functional tag to nodes in the rig. A common use case is removing the ",(0,r.jsx)(n.code,{children:"ctrls"})," or ",(0,r.jsx)(n.code,{children:"skin"})," role from a node."]}),"\n",(0,r.jsx)(n.h2,{id:"options",children:"Options"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"node"})}),", ",(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"nodes"})})," (",(0,r.jsx)(n.em,{children:"node"})," | ",(0,r.jsx)(n.em,{children:"list[node]"}),"): Nodes to modify."]}),"\n"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"remove"})})," (",(0,r.jsx)(n.em,{children:"str"}),"): Pattern used to match and remove tags."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"add"})})," (",(0,r.jsx)(n.em,{children:"str"}),"): Tag to add to the node(s). If multiple nodes are targeted, the tag will be indexed (e.g. ",(0,r.jsx)(n.code,{children:"tag.0"}),", ",(0,r.jsx)(n.code,{children:"tag.1"}),", ...)."]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"examples",children:"Examples"}),"\n",(0,r.jsx)(n.h3,{id:"remove-a-tag-from-a-single-node",children:"Remove a tag from a single node"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yml",children:"[mod]\ntag:\n  node: leg::ctrls  # get all the legs controllers\n  remove: ctrls.bend  # remove only this pattern\n"})}),"\n",(0,r.jsx)(n.h3,{id:"add-a-tag-to-a-specific-node",children:"Add a tag to a specific node"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yml",children:"[mod]\ntag:\n  node: arm.L::ctrls.ik\n  add: space.hand_L\n"})})]})}function m(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>d,x:()=>a});var o=s(6540);const r={},t=o.createContext(r);function d(e){const n=o.useContext(t);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:d(e.components),o.createElement(t.Provider,{value:n},e.children)}}}]);