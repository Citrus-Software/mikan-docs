"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[8735],{3827:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>o,contentTitle:()=>d,default:()=>h,frontMatter:()=>l,metadata:()=>t,toc:()=>a});const t=JSON.parse('{"id":"introduction/quickstart","title":"Quickstart Guide","description":"Welcome to Mikan, the modular rigging toolkit built for both Maya and Tangerine. This guide helps you get up and running with Mikan inside Maya \u2014 from creating your first rig blueprint to assigning controller shapes and binding geometry with deformers.","source":"@site/docs/introduction/quickstart.md","sourceDirName":"introduction","slug":"/introduction/quickstart","permalink":"/mikan-docs/introduction/quickstart","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Installation","permalink":"/mikan-docs/introduction/installation"},"next":{"title":"Template Blueprints","permalink":"/mikan-docs/usage/blueprints"}}');var s=i(4848),r=i(8453);const l={},d="Quickstart Guide",o={},a=[{value:"\ud83d\ude80 Launching the UI",id:"-launching-the-ui",level:2},{value:"\ud83e\udded UI Overview",id:"-ui-overview",level:2},{value:"\ud83c\udfd7\ufe0f Building Your First Rig",id:"\ufe0f-building-your-first-rig",level:2},{value:"About Templates",id:"about-templates",level:3},{value:"Creating a Biped Blueprint",id:"creating-a-biped-blueprint",level:3},{value:"Create a New Asset",id:"create-a-new-asset",level:4},{value:"Add Template Modules",id:"add-template-modules",level:4},{value:"Step-by-step logic",id:"step-by-step-logic",level:4},{value:"\ud83e\uddcd Quick Guide: Building a Basic Biped",id:"-quick-guide-building-a-basic-biped",level:4},{value:"\ud83c\udfae Controller Shapes",id:"-controller-shapes",level:2},{value:"Customizing Shapes",id:"customizing-shapes",level:3},{value:"\ud83d\ude80 Building the Rig",id:"-building-the-rig",level:2},{value:"Rebuilding and Cleaning",id:"rebuilding-and-cleaning",level:3},{value:"\ud83d\udd17 Binding Geometry",id:"-binding-geometry",level:2},{value:"Default Setup",id:"default-setup",level:3},{value:"Selecting Bind Joints",id:"selecting-bind-joints",level:3},{value:"\ud83d\udcbe Saving &amp; Reinjecting Deformer Data",id:"-saving--reinjecting-deformer-data",level:2},{value:"Step-by-Step",id:"step-by-step",level:3},{value:"\u2705 What\u2019s Next?",id:"-whats-next",level:2}];function c(e){const n={a:"a",blockquote:"blockquote",br:"br",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"quickstart-guide",children:"Quickstart Guide"})}),"\n",(0,s.jsxs)(n.p,{children:["Welcome to ",(0,s.jsx)(n.strong,{children:"Mikan"}),", the modular rigging toolkit built for both ",(0,s.jsx)(n.strong,{children:"Maya"})," and ",(0,s.jsx)(n.strong,{children:"Tangerine"}),". This guide helps you get up and running with Mikan inside Maya \u2014 from creating your first rig blueprint to assigning controller shapes and binding geometry with deformers."]}),"\n",(0,s.jsx)(n.p,{children:"By the end, you'll understand the full rig authoring loop: building, binding, and rebuilding rigs that are production-ready and fully modular."}),"\n",(0,s.jsx)(n.h2,{id:"-launching-the-ui",children:"\ud83d\ude80 Launching the UI"}),"\n",(0,s.jsx)(n.p,{children:"To open the Mikan interface inside Maya, run the following Python snippet in the script editor:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"from mikan.maya.ui import MikanUI\nMikanUI.start()\n"})}),"\n",(0,s.jsx)(n.h2,{id:"-ui-overview",children:"\ud83e\udded UI Overview"}),"\n",(0,s.jsx)(n.p,{children:"The Mikan interface is divided into several tabs, each aligned with a core phase of the rigging process:"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Tab"}),(0,s.jsx)(n.th,{children:"Purpose"}),(0,s.jsx)(n.th,{children:"Features"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.strong,{children:"Templates"})}),(0,s.jsx)(n.td,{children:"Build and organize the rig blueprint"}),(0,s.jsx)(n.td,{children:"Rig Outliner, Add/Edit tools, build logs"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.strong,{children:"Shapes"})}),(0,s.jsx)(n.td,{children:"Assign and customize controller shapes"}),(0,s.jsx)(n.td,{children:"Preset library, color and size adjustments"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.strong,{children:"Deformers"})}),(0,s.jsx)(n.td,{children:"Save and manage deformation data"}),(0,s.jsx)(n.td,{children:"SkinClusters, wrap deformers, backups, metadata injection"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.strong,{children:"Posing"})}),(0,s.jsx)(n.td,{children:"Facial pose system (WIP/optional)"}),(0,s.jsx)(n.td,{children:"Pose mirroring, management (early stage)"})]})]})]}),"\n",(0,s.jsx)(n.p,{children:"Additional tools can be found in the main menu bar : scene utilities, rigging tools, pipeline scripts, and other production shortcuts."}),"\n",(0,s.jsx)(n.h2,{id:"\ufe0f-building-your-first-rig",children:"\ud83c\udfd7\ufe0f Building Your First Rig"}),"\n",(0,s.jsx)(n.h3,{id:"about-templates",children:"About Templates"}),"\n",(0,s.jsxs)(n.p,{children:["Mikan rigs are built from ",(0,s.jsx)(n.strong,{children:"Template"})," modules. These are the components that define structure. Template modules contain metadata embedded within the hierarchy nodes, making it possible to reuse and export prebuilt blocks (like arms, legs, spines) across projects."]}),"\n",(0,s.jsx)(n.p,{children:"Template modules appear as joint chains in the scene. This means pre-built template parts can easily be exported, shared, and reused across characters and projects."}),"\n",(0,s.jsx)(n.h3,{id:"creating-a-biped-blueprint",children:"Creating a Biped Blueprint"}),"\n",(0,s.jsx)(n.h4,{id:"create-a-new-asset",children:"Create a New Asset"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Go to the ",(0,s.jsx)(n.strong,{children:"Templates"})," tab, then select the ",(0,s.jsx)(n.code,{children:"Add"})," subtab and click ",(0,s.jsx)(n.code,{children:"New Asset"})]}),"\n",(0,s.jsx)(n.li,{children:"Name the asset, this will become the root of your rig"}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"add-template-modules",children:"Add Template Modules"}),"\n",(0,s.jsxs)(n.p,{children:["With your new asset created, the next step is to populate it with ",(0,s.jsx)(n.strong,{children:"template modules"})," \u2014 these are the rig building blocks (spine, limbs, props, etc.). Each one must be inserted ",(0,s.jsx)(n.strong,{children:"manually and hierarchically"}),", to reflect the structure of your character."]}),"\n",(0,s.jsx)(n.h4,{id:"step-by-step-logic",children:"Step-by-step logic"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Select the parent template module"}),(0,s.jsx)(n.br,{}),"\n","In the ",(0,s.jsx)(n.strong,{children:"Template outliner"}),", click the module you want to attach your new part to. For example, to attach an ",(0,s.jsx)(n.code,{children:"arm"})," or ",(0,s.jsx)(n.code,{children:"leg"}),", you\u2019ll typically select the ",(0,s.jsx)(n.code,{children:"spine"})," module as the parent."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Open the Add tab"}),(0,s.jsx)(n.br,{}),"\n","In the ",(0,s.jsx)(n.strong,{children:"Templates > Add"})," section, choose the category (e.g. ",(0,s.jsx)(n.code,{children:"arm"}),", ",(0,s.jsx)(n.code,{children:"leg"}),", ",(0,s.jsx)(n.code,{children:"spine"}),", ",(0,s.jsx)(n.code,{children:"neck"}),", etc.), then select a specific module.",(0,s.jsx)(n.br,{}),"\n","Module names follow a ",(0,s.jsx)(n.code,{children:"family.variant"})," naming scheme. For example: ",(0,s.jsx)(n.code,{children:"spine.default"}),", ",(0,s.jsx)(n.code,{children:"arm.legacy"})," or ",(0,s.jsx)(n.code,{children:"world.character"})]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Choose the right attachment point"}),(0,s.jsx)(n.br,{}),"\n","Once a parent is selected in the outliner, the ",(0,s.jsx)(n.strong,{children:"Add"})," subtab will let you pick the ",(0,s.jsx)(n.strong,{children:"attachment slot"}),". These are context-dependent and vary by module."]}),"\n",(0,s.jsxs)(n.p,{children:["For instance: To attach arms or the neck to a ",(0,s.jsx)(n.code,{children:"spine"}),", choose the slot ",(0,s.jsx)(n.code,{children:"spine.torso"})]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:'Click "Add New Template"'}),(0,s.jsx)(n.br,{}),"\n","This will insert the module in the scene as a guide, essentially a joint chain, that you can now position like any standard skeleton."]}),"\n",(0,s.jsx)(n.p,{children:"You\u2019re free to move, rotate, and align the joints to match your character mesh."}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Configure Template Settings"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Select a template module \u2192 go to the ",(0,s.jsx)(n.code,{children:"Edit"})," subtab"]}),"\n",(0,s.jsx)(n.li,{children:"Adjust build options like joint orientation types, mirror behavior, rotation order, and more"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"-quick-guide-building-a-basic-biped",children:"\ud83e\uddcd Quick Guide: Building a Basic Biped"}),"\n",(0,s.jsx)(n.p,{children:"Here\u2019s a minimal and functional template setup to get a humanoid rig up and running:"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"world.character"})," \u2014 defines the global root of the character"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"spine.default"})," \u2014 creates the central spine chain under ",(0,s.jsx)(n.code,{children:"world.root"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"leg.default"})," \u2014 add a left and right leg under ",(0,s.jsx)(n.code,{children:"spine.hips"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"arm.default"})," \u2014 add a left and right arm under ",(0,s.jsx)(n.code,{children:"spine.torso"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"neck.default"})," \u2014 add a neck (this module also includes the head)"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Once these are placed and adjusted in the scene, you\u2019ll have a complete rig structure ready for configuration and controller shaping."}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsx)(n.p,{children:"\u26a0\ufe0f At this stage, the modules are only skeleton guides. No controllers or visual shapes are generated yet \u2014 that comes next."}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["\ud83d\udcc1 You can find a working example of this setup in ",(0,s.jsx)(n.code,{children:"examples/tpl_biped.ma"}),".\nIt\u2019s a great starting point or reference if you want to see the result in context."]}),"\n",(0,s.jsx)(n.h2,{id:"-controller-shapes",children:"\ud83c\udfae Controller Shapes"}),"\n",(0,s.jsxs)(n.p,{children:["In Mikan, all rig controllers are ",(0,s.jsx)(n.strong,{children:"NURBS curves"}),". Initially, a new blueprint contains no shapes."]}),"\n",(0,s.jsx)(n.p,{children:"To generate them:"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"Select one or more modules in the Template Outliner (or just the Asset to do all at once)"}),"\n",(0,s.jsxs)(n.li,{children:["Click the ",(0,s.jsx)(n.code,{children:"Shapes"})," button in the main toolbar (Templates tab)"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"This creates default controller curves for each part."}),"\n",(0,s.jsx)(n.h3,{id:"customizing-shapes",children:"Customizing Shapes"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Use the ",(0,s.jsx)(n.strong,{children:"Shapes"})," tab to change shape presets, colors, and scale quickly"]}),"\n",(0,s.jsxs)(n.li,{children:["You can also manually edit the curves in Maya:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Move CVs to customize visuals"}),"\n",(0,s.jsx)(n.li,{children:"Adjust transform nodes if needed"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"As long as the curves remain correctly placed in the scene hierarchy, your edits will persist."}),"\n",(0,s.jsx)(n.h2,{id:"-building-the-rig",children:"\ud83d\ude80 Building the Rig"}),"\n",(0,s.jsxs)(n.p,{children:["With template placed and shapes assigned, it\u2019s time to ",(0,s.jsx)(n.strong,{children:"build the rig"}),":"]}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"In the Templates tab, select any node from your rig in the Outliner"}),"\n",(0,s.jsxs)(n.li,{children:["Click the ",(0,s.jsx)(n.strong,{children:"rocket icon"})," in the top-left toolbar to launch a build"]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["By default, Mikan builds the rig in ",(0,s.jsx)(n.strong,{children:"Animator mode"}),", meaning it's immediately usable. To enable development-friendly behavior (e.g. easier inspection, custom debug modes), toggle ",(0,s.jsx)(n.strong,{children:"Dev Mode"})," using the wrench \ud83d\udee0\ufe0f icon on the right side of the toolbar. This gives you more visibility into the rig internals during iteration."]}),"\n",(0,s.jsx)(n.h3,{id:"rebuilding-and-cleaning",children:"Rebuilding and Cleaning"}),"\n",(0,s.jsx)(n.p,{children:"To make changes:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Click the ",(0,s.jsx)(n.strong,{children:"broom icon"})," to wipe the rig and go back to the editable template"]}),"\n",(0,s.jsx)(n.li,{children:"Then make edits and rebuild as needed"}),"\n"]}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsx)(n.p,{children:"\u267b\ufe0f This fast iteration loop is one of Mikan\u2019s core strengths. You can build, adjust, and rebuild with minimal friction."}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"-binding-geometry",children:"\ud83d\udd17 Binding Geometry"}),"\n",(0,s.jsx)(n.h3,{id:"default-setup",children:"Default Setup"}),"\n",(0,s.jsxs)(n.p,{children:["By default, Mikan integrates the ",(0,s.jsx)(n.strong,{children:"bind joints"})," directly inside the rig structure. This works well for most cases, especially during early development, but ",(0,s.jsx)(n.strong,{children:"it doesn\u2019t create a separate binding hierarchy"})," for game-ready or export-friendly skeletons."]}),"\n",(0,s.jsx)(n.p,{children:"This can be configured later using custom build options, but the initial setup assumes everything is embedded."}),"\n",(0,s.jsx)(n.h3,{id:"selecting-bind-joints",children:"Selecting Bind Joints"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["In the ",(0,s.jsx)(n.strong,{children:"Templates"})," tab, ",(0,s.jsx)(n.strong,{children:"right-click"})," on a module in the Template Outliner (preferably the top template ",(0,s.jsx)(n.code,{children:"world"})," module)"]}),"\n",(0,s.jsxs)(n.li,{children:["Choose either ",(0,s.jsx)(n.code,{children:"Select Bind Joints"})," or ",(0,s.jsx)(n.code,{children:"Select Bind Joints Hierarchy"})," depending on how much you want from the outliner."]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["You can now perform a standard Maya ",(0,s.jsx)(n.code,{children:"Bind Skin"})," operation."]}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:["\ud83e\udde9 Mikan supports many Maya deformers, though not all are fully covered yet. See the ",(0,s.jsx)(n.a,{href:"/mikan-docs/usage/deformers/overview",children:"Deformers Guide"})," for details."]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"-saving--reinjecting-deformer-data",children:"\ud83d\udcbe Saving & Reinjecting Deformer Data"}),"\n",(0,s.jsxs)(n.p,{children:["Once binding is done, you'll want to ",(0,s.jsx)(n.strong,{children:"save the skinning weights"})," (and any deformers) back into the rig blueprint, so future builds can restore them automatically."]}),"\n",(0,s.jsx)(n.h3,{id:"step-by-step",children:"Step-by-Step"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Select your bound mesh (or group of meshes)"}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["In the ",(0,s.jsx)(n.strong,{children:"Deformers"})," tab, click the ",(0,s.jsx)(n.strong,{children:"Create Backup"})," button (\ud83d\udce6)"]}),"\n",(0,s.jsx)(n.p,{children:"This generates a group at the root of the scene, which includes all the relevant deformer metadata (skin, wrap, lattice, etc.)"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsx)(n.p,{children:"\ud83d\udccc At this stage, the group is just a neutral transform and not yet part of the rig blueprint."}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"To link it with the rig:"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Parent the backup group into your Mikan ",(0,s.jsx)(n.strong,{children:"template group"})," in the scene"]}),"\n",(0,s.jsxs)(n.li,{children:["If it doesn't appear, click the ",(0,s.jsx)(n.code,{children:"Refresh"})," button in the toolbar"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"From now on:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Rebuilding the rig will ",(0,s.jsx)(n.strong,{children:"automatically restore"})," your deformers"]}),"\n",(0,s.jsxs)(n.li,{children:["Wiping the rig will ",(0,s.jsx)(n.strong,{children:"also remove"})," those deformers"]}),"\n"]}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsx)(n.p,{children:"\u26a0\ufe0f It\u2019s crucial to ensure backups are properly saved in the rig blueprint before rebuilding \u2014 otherwise, you risk losing your skin weights."}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"-whats-next",children:"\u2705 What\u2019s Next?"}),"\n",(0,s.jsx)(n.p,{children:"In this Quickstart, you've seen the full authoring loop:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Building a modular rig blueprint"}),"\n",(0,s.jsx)(n.li,{children:"Assigning controller shapes"}),"\n",(0,s.jsx)(n.li,{children:"Binding geometry and saving deformer data"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Next, we\u2019ll dive into more advanced topics like:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Custom ",(0,s.jsx)(n.strong,{children:"modifiers"})," for extending templates"]}),"\n",(0,s.jsxs)(n.li,{children:["Facial rigs and ",(0,s.jsx)(n.strong,{children:"pose systems"})]}),"\n",(0,s.jsxs)(n.li,{children:["Publishing rigs for ",(0,s.jsx)(n.strong,{children:"Tangerine scenes"})]}),"\n",(0,s.jsxs)(n.li,{children:["Advanced workflows like ",(0,s.jsx)(n.strong,{children:"release vs anim layouts"})]}),"\n",(0,s.jsx)(n.li,{children:"Shape correction and deformation layers"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"For now, you\u2019re ready to start building rebuildable, production-grade rigs with Mikan."})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>l,x:()=>d});var t=i(6540);const s={},r=t.createContext(s);function l(e){const n=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:l(e.components),t.createElement(r.Provider,{value:n},e.children)}}}]);