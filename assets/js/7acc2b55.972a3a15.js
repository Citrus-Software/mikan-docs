"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[8959],{280:(e,i,n)=>{n.d(i,{A:()=>t});const t=n.p+"assets/images/add_modifier_parent-d823da3ebf83fba79d1c9af3754c248c.png"},4923:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>d,contentTitle:()=>l,default:()=>c,frontMatter:()=>r,metadata:()=>t,toc:()=>a});const t=JSON.parse('{"id":"guides/tuto04_modifiers/mikan_modifiers_EN","title":"Using Modifiers","description":"Definition","source":"@site/docs/guides/tuto04_modifiers/mikan_modifiers_EN.md","sourceDirName":"guides/tuto04_modifiers","slug":"/guides/tuto04_modifiers/mikan_modifiers_EN","permalink":"/mikan-docs/guides/tuto04_modifiers/mikan_modifiers_EN","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Using branches","permalink":"/mikan-docs/guides/tuto03_branches/mikan_branchs"},"next":{"title":"core.bones","permalink":"/mikan-docs/references/tpl/core/bones"}}');var s=n(4848),o=n(8453);const r={},l="Using Modifiers",d={},a=[{value:"Definition",id:"definition",level:2},{value:"Adding a Helper and Modifiers",id:"adding-a-helper-and-modifiers",level:2},{value:"Example: hoodie rig with follow + manual offset",id:"example-hoodie-rig-with-follow--manual-offset",level:2},{value:"Main steps",id:"main-steps",level:3},{value:"Step 1 : Group + visibility menu",id:"step-1--group--visibility-menu",level:3},{value:"Step 2 : Attach the hoodie to the main rig",id:"step-2--attach-the-hoodie-to-the-main-rig",level:3},{value:"Step 3 : Add a follow attribute",id:"step-3--add-a-follow-attribute",level:3},{value:"Step 4 : Trigger follow with a Drive",id:"step-4--trigger-follow-with-a-drive",level:3},{value:"Step 5 : Connect the follow attribute",id:"step-5--connect-the-follow-attribute",level:3},{value:"Step 6 : Alternative with an Expression (recommended)",id:"step-6--alternative-with-an-expression-recommended",level:3},{value:"Summary",id:"summary",level:2},{value:"Conclusion",id:"conclusion",level:2}];function h(e){const i={a:"a",admonition:"admonition",br:"br",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",img:"img",li:"li",mdxAdmonitionTitle:"mdxAdmonitionTitle",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(i.header,{children:(0,s.jsx)(i.h1,{id:"using-modifiers",children:"Using Modifiers"})}),"\n",(0,s.jsx)(i.h2,{id:"definition",children:"Definition"}),"\n",(0,s.jsxs)(i.p,{children:["A ",(0,s.jsx)(i.strong,{children:"modifier"})," in Mikan is an instruction ",(0,s.jsx)(i.strong,{children:"defined on a helper node"}),".",(0,s.jsx)(i.br,{}),"\n","It is executed automatically ",(0,s.jsx)(i.strong,{children:"after the rig is built"})," and is used to customize and extend the rig's behavior."]}),"\n",(0,s.jsxs)(i.p,{children:["Modifiers are the central tool that let you go ",(0,s.jsx)(i.strong,{children:"as far as you want"})," in customizing your rigs.",(0,s.jsx)(i.br,{}),"\n","They act like \u201clogic blocks\u201d that can be stacked, combined, and adapted endlessly."]}),"\n",(0,s.jsx)(i.p,{children:"\ud83d\udc49 These are the tools of your experimentation ground: you are free to combine them to enrich your rigs with tailored logic."}),"\n",(0,s.jsx)(i.p,{children:"Key characteristics:"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:["A helper can contain ",(0,s.jsx)(i.strong,{children:"any number of modifiers"}),"."]}),"\n",(0,s.jsxs)(i.li,{children:["Modifiers are executed ",(0,s.jsx)(i.strong,{children:"in the order in which they appear"}),"."]}),"\n",(0,s.jsxs)(i.li,{children:["Combining multiple modifiers makes it possible to build ",(0,s.jsx)(i.strong,{children:"complex, parameterized behaviors"}),"."]}),"\n"]}),"\n",(0,s.jsx)(i.p,{children:"Typical use cases include:"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:"setting default values,"}),"\n",(0,s.jsx)(i.li,{children:"adding constraints,"}),"\n",(0,s.jsx)(i.li,{children:"creating visibility menus,"}),"\n",(0,s.jsx)(i.li,{children:"setting up hierarchies and complex connections."}),"\n"]}),"\n",(0,s.jsx)(i.p,{children:(0,s.jsx)(i.img,{alt:"List of available modifiers",src:n(7584).A+"",width:"400",height:"605"})}),"\n",(0,s.jsxs)(i.p,{children:["\ud83d\udc49 The full list of available modifiers, with their definitions and usage, can be found here:",(0,s.jsx)(i.br,{}),"\n",(0,s.jsx)(i.a,{href:"https://citrus-software.github.io/mikan-docs/",children:"Mikan Documentation \u2013 Modifiers"})]}),"\n",(0,s.jsx)(i.h2,{id:"adding-a-helper-and-modifiers",children:"Adding a Helper and Modifiers"}),"\n",(0,s.jsx)(i.p,{children:"To define instructions with a modifier:"}),"\n",(0,s.jsxs)(i.ol,{children:["\n",(0,s.jsxs)(i.li,{children:["Right-click on a template > ",(0,s.jsx)(i.strong,{children:"Add Helper Node"}),"."]}),"\n",(0,s.jsx)(i.li,{children:"Give the helper a clear name."}),"\n",(0,s.jsxs)(i.li,{children:["Right-click on the helper > ",(0,s.jsx)(i.strong,{children:"Add Modifier"}),"."]}),"\n",(0,s.jsx)(i.li,{children:"Select the desired modifier type from the list."}),"\n"]}),"\n",(0,s.jsxs)(i.admonition,{type:"info",children:[(0,s.jsx)(i.p,{children:"Each helper can contain multiple modifier notes, which are executed sequentially when the rig is built."}),(0,s.jsx)(i.p,{children:(0,s.jsx)(i.img,{alt:"Add a modifier node",src:n(6959).A+"",width:"400",height:"381"})})]}),"\n",(0,s.jsx)(i.h2,{id:"example-hoodie-rig-with-follow--manual-offset",children:"Example: hoodie rig with follow + manual offset"}),"\n",(0,s.jsx)(i.p,{children:"The goal is to rig a hoodie that:"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:"follows the clavicle's movement,"}),"\n",(0,s.jsx)(i.li,{children:"while still giving animators manual control."}),"\n"]}),"\n",(0,s.jsx)(i.h3,{id:"main-steps",children:"Main steps"}),"\n",(0,s.jsxs)(i.ol,{children:["\n",(0,s.jsxs)(i.li,{children:["Create a ",(0,s.jsx)(i.strong,{children:"group"})," for the hoodie controllers and add a visibility menu."]}),"\n",(0,s.jsx)(i.li,{children:"Attach the hoodie to the main rig."}),"\n",(0,s.jsxs)(i.li,{children:["Add a custom follow attribute (",(0,s.jsx)(i.strong,{children:"follow_clav"}),")."]}),"\n",(0,s.jsxs)(i.li,{children:["Connect this attribute to the follow behavior using either a ",(0,s.jsx)(i.em,{children:"drive"})," or an ",(0,s.jsx)(i.em,{children:"expression"}),"."]}),"\n"]}),"\n",(0,s.jsx)(i.h3,{id:"step-1--group--visibility-menu",children:"Step 1 : Group + visibility menu"}),"\n",(0,s.jsxs)(i.p,{children:["First, create a ",(0,s.jsx)(i.strong,{children:"template module group"})," for the hoodie.",(0,s.jsx)(i.br,{}),"\n","Then:"]}),"\n",(0,s.jsxs)(i.ol,{children:["\n",(0,s.jsxs)(i.li,{children:["Right-click on this module group > ",(0,s.jsx)(i.strong,{children:"Add Helper Node"}),"."]}),"\n",(0,s.jsxs)(i.li,{children:["Give the helper a clear name (e.g. ",(0,s.jsx)(i.em,{children:"hoodie_rig"}),")."]}),"\n",(0,s.jsxs)(i.li,{children:["Right-click on the helper > ",(0,s.jsx)(i.strong,{children:"Add Modifier"})," > choose ",(0,s.jsx)(i.strong,{children:"group"})," from the list."]}),"\n"]}),"\n",(0,s.jsx)(i.p,{children:"The group modifier creates a visibility menu that lets animators toggle the hoodie rig controllers on or off."}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-yaml",children:"[mod]\ngroup:\n  vis: neck::ctrls.neck0     # the controller that will display the right-click visibility menu\n  nodes:                     # the controllers that will be shown/hidden through this menu\n    - hoodie_side:::ctrls\n  tag: vis.hoodie\n  name: hoodie\n"})}),"\n",(0,s.jsx)(i.p,{children:(0,s.jsx)(i.img,{alt:"Modifier group",src:n(9535).A+"",width:"800",height:"469"})}),"\n",(0,s.jsx)(i.h3,{id:"step-2--attach-the-hoodie-to-the-main-rig",children:"Step 2 : Attach the hoodie to the main rig"}),"\n",(0,s.jsxs)(i.p,{children:["On the same helper, right-click > ",(0,s.jsx)(i.strong,{children:"Add Modifier > Parent"}),".",(0,s.jsx)(i.br,{}),"\n","The parent modifier is added after the group modifier."]}),"\n",(0,s.jsx)(i.p,{children:"This modifier attaches the hoodie to the main rig."}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-yaml",children:"[mod]\nparent:\n  - hoodie_rig::node\n  - spine::skin.5\n"})}),"\n",(0,s.jsx)(i.p,{children:(0,s.jsx)(i.img,{alt:"Modifier parent",src:n(280).A+"",width:"400",height:"352"})}),"\n",(0,s.jsx)(i.h3,{id:"step-3--add-a-follow-attribute",children:"Step 3 : Add a follow attribute"}),"\n",(0,s.jsxs)(i.p,{children:["To create the custom ",(0,s.jsx)(i.strong,{children:"follow"})," attribute, we need it to appear on both hoodie controllers: left ",(0,s.jsx)(i.strong,{children:"L"})," and right ",(0,s.jsx)(i.strong,{children:"R"}),".",(0,s.jsx)(i.br,{}),"\n","For this, we add the note to a helper under the ",(0,s.jsx)(i.strong,{children:"hoodie_side"})," template module, which is already branched."]}),"\n",(0,s.jsxs)(i.ol,{children:["\n",(0,s.jsxs)(i.li,{children:["Right-click on the hoodie_side joint module > ",(0,s.jsx)(i.strong,{children:"Add Helper Node"}),". Give the helper a clear name."]}),"\n",(0,s.jsxs)(i.li,{children:["On this helper, right-click > ",(0,s.jsx)(i.strong,{children:"Add Modifier > Plug"}),"."]}),"\n"]}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-yaml",children:"[mod]\nplug:\n  node: hoodie_side.L::ctrls.0\n  follow_clav:\n    type: float\n    set: 1\n    keyable: on\n    min: 0\n    max: 1\n"})}),"\n",(0,s.jsx)(i.p,{children:"\ud83d\udc49 This creates a slider to control how much the hoodie follows the clavicle."}),"\n",(0,s.jsxs)(i.admonition,{type:"note",children:[(0,s.jsx)(i.mdxAdmonitionTitle,{}),(0,s.jsxs)(i.p,{children:["Because the hoodie_side module has a branch ",(0,s.jsx)(i.code,{children:"[L, R]"}),", the note only needs to be written once for the left side.",(0,s.jsx)(i.br,{}),"\n","Mikan will automatically duplicate the attribute for the right side."]})]}),"\n",(0,s.jsx)(i.h3,{id:"step-4--trigger-follow-with-a-drive",children:"Step 4 : Trigger follow with a Drive"}),"\n",(0,s.jsxs)(i.p,{children:["On the same helper, right-click > ",(0,s.jsx)(i.strong,{children:"Add Modifier > Drive"}),".",(0,s.jsx)(i.br,{}),"\n","This modifier creates a driven key so the hoodie follows the clavicle when it moves."]}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-yaml",children:"[mod]\ndrive:\n  node: arm.L::j.clavicle@r.z\n  hoodie_side.L::poses.0@t.x:\n    -10: 0\n    0: 0\n    30: -0.2\n    pre: constant\n    post: constant\n  hoodie_side.L::poses.0@t.y:\n    -10: -0.2\n    0: 0\n    30: 1.25\n    pre: constant\n    post: constant\n    flip: on\n  hoodie_side.L::poses.0@t.z:\n    -10: 0\n    0: 0\n    30: 0.21\n    pre: constant\n    post: constant\n"})}),"\n",(0,s.jsxs)(i.admonition,{type:"note",children:[(0,s.jsx)(i.mdxAdmonitionTitle,{}),(0,s.jsxs)(i.p,{children:["The drive is added after the plug modifier in the same helper.",(0,s.jsx)(i.br,{}),"\n","It links the clavicle\u2019s rotation to the hoodie\u2019s pose, while still allowing manual control."]})]}),"\n",(0,s.jsx)(i.h3,{id:"step-5--connect-the-follow-attribute",children:"Step 5 : Connect the follow attribute"}),"\n",(0,s.jsxs)(i.p,{children:["Edit the ",(0,s.jsx)(i.strong,{children:"drive"})," note to add a ",(0,s.jsx)(i.strong,{children:"weight"})," option.",(0,s.jsx)(i.br,{}),"\n","This connects the drive to the custom attribute ",(0,s.jsx)(i.code,{children:"follow_clav"}),"."]}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-yaml",children:"[mod]\ndrive:\n  node: arm.L::j.clavicle@r.z\n  hoodie_side.L::poses.0@t.x:\n    ...\n  hoodie_side.L::poses.0@t.y:\n    ...\n  hoodie_side.L::poses.0@t.z:\n    ...\n  weight: hoodie_side.L::ctrls.0@follow_clav\n"})}),"\n",(0,s.jsxs)(i.p,{children:["\ud83d\udc49 The drive now responds to the ",(0,s.jsx)(i.strong,{children:"follow_clav"})," slider."]}),"\n",(0,s.jsxs)(i.admonition,{type:"note",children:[(0,s.jsx)(i.mdxAdmonitionTitle,{}),(0,s.jsx)(i.p,{children:"This setup allows animators to control how strongly the hoodie follows the clavicle using the custom attribute."})]}),"\n",(0,s.jsx)(i.h3,{id:"step-6--alternative-with-an-expression-recommended",children:"Step 6 : Alternative with an Expression (recommended)"}),"\n",(0,s.jsxs)(i.p,{children:["As an alternative, replace the drive with an ",(0,s.jsx)(i.strong,{children:"expression"})," modifier on the same helper.",(0,s.jsx)(i.br,{}),"\n","Expressions are usually preferred because they are lighter and more flexible than drives."]}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-yaml",children:"[mod]\nexpression:\n  op: y = lerp(0, flip*5*quat([rx, ry, rz], xyz).z, w)\n  y: hoodie_side.L::poses.0@t.y\n  rx: arm.L::j.clavicle@r.x\n  ry: arm.L::j.clavicle@r.y\n  rz: arm.L::j.clavicle@r.z\n  w: hoodie_side.L::ctrls.0@follow_clav\n"})}),"\n",(0,s.jsxs)(i.admonition,{type:"tip",children:[(0,s.jsx)(i.mdxAdmonitionTitle,{}),(0,s.jsxs)(i.p,{children:["With a single expression, both the clavicle follow and the connection to the custom attribute are handled.",(0,s.jsx)(i.br,{}),"\n","This approach is recommended over a drive for clarity and performance."]})]}),"\n",(0,s.jsx)(i.h2,{id:"summary",children:"Summary"}),"\n",(0,s.jsx)(i.p,{children:"Recap of the steps:"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:"Create a group for the hoodie + visibility menu,"}),"\n",(0,s.jsx)(i.li,{children:"Attach the hoodie to the main rig with a parent modifier,"}),"\n",(0,s.jsxs)(i.li,{children:["Add a ",(0,s.jsx)(i.strong,{children:"follow_clav"})," attribute to the control,"]}),"\n",(0,s.jsxs)(i.li,{children:["Implement the behavior with a ",(0,s.jsx)(i.strong,{children:"drive"})," or, preferably, an ",(0,s.jsx)(i.strong,{children:"expression"}),", connected to the follow attribute."]}),"\n"]}),"\n",(0,s.jsxs)(i.p,{children:["\ud83d\udca1 ",(0,s.jsx)(i.strong,{children:"Recommendation:"})," prefer ",(0,s.jsx)(i.em,{children:"expression"})," over ",(0,s.jsx)(i.em,{children:"drive"})," \u2014 it is lighter, cleaner, and more responsive."]}),"\n",(0,s.jsxs)(i.admonition,{type:"info",children:[(0,s.jsxs)(i.p,{children:["When modifier notes are placed under ",(0,s.jsx)(i.strong,{children:"branches"}),", Mikan automatically duplicates them.",(0,s.jsx)(i.br,{}),"\n","You only need to write them once, on the left side \u2014 Mikan applies the same logic to the right side."]}),(0,s.jsx)(i.p,{children:"\u2705 No need to copy and paste."})]}),"\n",(0,s.jsx)(i.h2,{id:"conclusion",children:"Conclusion"}),"\n",(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.strong,{children:"Modifiers"})," make it possible to automate and customize rigs directly in Mikan.",(0,s.jsx)(i.br,{}),"\n","They allow you to:"]}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:"stack logic,"}),"\n",(0,s.jsx)(i.li,{children:"parameterize behaviors,"}),"\n",(0,s.jsx)(i.li,{children:"and enrich rigs in a consistent and maintainable way."}),"\n"]})]})}function c(e={}){const{wrapper:i}={...(0,o.R)(),...e.components};return i?(0,s.jsx)(i,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}},6959:(e,i,n)=>{n.d(i,{A:()=>t});const t=n.p+"assets/images/plusieurs_modifiers-5eda841660a53a3f570d70631e6e37ff.png"},7584:(e,i,n)=>{n.d(i,{A:()=>t});const t=n.p+"assets/images/modifiers_liste-a3e51b9009068f0b01af4acdf8310fc2.png"},8453:(e,i,n)=>{n.d(i,{R:()=>r,x:()=>l});var t=n(6540);const s={},o=t.createContext(s);function r(e){const i=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function l(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),t.createElement(o.Provider,{value:i},e.children)}},9535:(e,i,n)=>{n.d(i,{A:()=>t});const t=n.p+"assets/images/hoodie_vis-68f3b0781493b2b83cc72ecb33e466c0.png"}}]);