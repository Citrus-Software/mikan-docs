"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[8035],{3767:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>l,contentTitle:()=>d,default:()=>h,frontMatter:()=>c,metadata:()=>s,toc:()=>i});const s=JSON.parse('{"id":"references/mod/locator","title":"locator","description":"Duplicates one or more locator-like nodes with optional parenting, shapes, and behaviors.","source":"@site/docs/references/mod/locator.md","sourceDirName":"references/mod","slug":"/references/mod/locator","permalink":"/mikan-docs/docs/references/mod/locator","draft":false,"unlisted":false,"editUrl":"https://github.com/citrus-software/mikan-docs/tree/main/packages/create-docusaurus/templates/shared/docs/references/mod/locator.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"hook","permalink":"/mikan-docs/docs/references/mod/hook"},"next":{"title":"parent","permalink":"/mikan-docs/docs/references/mod/parent"}}');var r=o(4848),t=o(8453);const c={},d="locator",l={},i=[{value:"Options",id:"options",level:2},{value:"Example",id:"example",level:2}];function a(e){const n={blockquote:"blockquote",code:"code",em:"em",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"locator",children:"locator"})}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsx)(n.p,{children:"Duplicates one or more locator-like nodes with optional parenting, shapes, and behaviors."}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"This modifier is used to create locator transforms, optionally shaped or joint-based, matching the transforms of one or more source nodes."}),"\n",(0,r.jsx)(n.h2,{id:"options",children:"Options"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"node"})})," (",(0,r.jsx)(n.em,{children:"node"}),", optional): Single node to duplicate."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"nodes"})})," (",(0,r.jsx)(n.em,{children:"list[node]"}),", optional): List of nodes to duplicate. Overrides ",(0,r.jsx)(n.code,{children:"node"})," if both are provided."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"parent"})})," (",(0,r.jsx)(n.em,{children:"node"}),", optional): Parent node under which the new locator(s) will be inserted. Defaults to the parent of the source node."]}),"\n"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"name"})})," (",(0,r.jsx)(n.em,{children:"str"}),", optional): Base name of the locator(s), used for both display and ID tagging."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"prefix"})})," (",(0,r.jsx)(n.em,{children:"str"}),", default: ",(0,r.jsx)(n.code,{children:"loc"}),"): Name prefix for the created nodes. Changed to ",(0,r.jsx)(n.code,{children:"sk"})," if ",(0,r.jsx)(n.code,{children:"skin"})," is enabled."]}),"\n"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"root"})})," (",(0,r.jsx)(n.em,{children:"bool"}),", default: ",(0,r.jsx)(n.code,{children:"false"}),"): Adds a transform node above the created locator (acts as a parent)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"skin"})})," (",(0,r.jsx)(n.em,{children:"bool"}),", default: ",(0,r.jsx)(n.code,{children:"false"}),"): Creates a joint instead of a standard transform node."]}),"\n"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"locator"})})," (",(0,r.jsx)(n.em,{children:"bool"}),", default: ",(0,r.jsx)(n.code,{children:"false"}),"): Adds a locator shape under the transform."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"size"})})," (",(0,r.jsx)(n.em,{children:"float"}),", default: ",(0,r.jsx)(n.code,{children:"0.1"}),"): Size of the locator shape (if ",(0,r.jsx)(n.code,{children:"locator"})," is enabled)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"shape"})})," (",(0,r.jsx)(n.em,{children:"bool"}),", default: ",(0,r.jsx)(n.code,{children:"false"}),"): Copies the shape (curve) from the source node if present."]}),"\n"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"copycat"})})," (",(0,r.jsx)(n.em,{children:"bool"}),", default: ",(0,r.jsx)(n.code,{children:"false"}),"): Connects the source node's local matrix to the duplicated locator. The result mimics the source node's transforms (translation, rotation, scale, shear)."]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"example",children:"Example"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yml",children:"locator:\n  node: bone::tip\n  parent: world::node\n  name: loc_bone\n"})})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(a,{...e})}):a(e)}},8453:(e,n,o)=>{o.d(n,{R:()=>c,x:()=>d});var s=o(6540);const r={},t=s.createContext(r);function c(e){const n=s.useContext(t);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:c(e.components),s.createElement(t.Provider,{value:n},e.children)}}}]);