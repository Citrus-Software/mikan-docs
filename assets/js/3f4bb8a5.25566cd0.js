"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[2762],{1618:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>l,contentTitle:()=>c,default:()=>f,frontMatter:()=>i,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"references/deformers/project","title":"project","description":"Shrink wrap deformation.","source":"@site/docs/references/deformers/project.md","sourceDirName":"references/deformers","slug":"/references/deformers/project","permalink":"/mikan-docs/references/deformers/project","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"nonlinear","permalink":"/mikan-docs/references/deformers/nonLinear"},"next":{"title":"skin","permalink":"/mikan-docs/references/deformers/skin"}}');var t=o(4848),s=o(8453);const i={},c="project",l={},d=[{value:"Features",id:"features",level:2},{value:"Options",id:"options",level:2},{value:"Hooks",id:"hooks",level:2}];function a(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",ul:"ul",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"project",children:"project"})}),"\n",(0,t.jsx)(n.p,{children:"Shrink wrap deformation."}),"\n",(0,t.jsx)(n.h2,{id:"features",children:"Features"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Allows projecting one geometry onto another in different ways."}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"options",children:"Options"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"bidirectional (bool, default: on)"})," : enables bidirectional projection"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"closest_if_no_intersection (bool, default: off)"})," : uses closest point projection if no intersection is found"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"offset (float)"})," : offset distance from the projection surface"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"target_offset (float)"})," : offset applied specifically to the target geometry"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"target_subdivision (int, default: 0, min: 0)"})," : subdivision level of the target"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"hooks",children:"Hooks"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"enable"}),", ",(0,t.jsx)(n.code,{children:"envelope (float, min: 0, max: 1)"})," : weight of the deformation"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"offset (float)"})," : offset distance for the deformation"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"target_offset (float)"})," : offset applied to the target geometry"]}),"\n"]})]})}function f(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(a,{...e})}):a(e)}},8453:(e,n,o)=>{o.d(n,{R:()=>i,x:()=>c});var r=o(6540);const t={},s=r.createContext(t);function i(e){const n=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:i(e.components),r.createElement(s.Provider,{value:n},e.children)}}}]);