"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[1255],{3613:(e,n,l)=>{l.r(n),l.d(n,{assets:()=>d,contentTitle:()=>c,default:()=>h,frontMatter:()=>r,metadata:()=>i,toc:()=>o});const i=JSON.parse('{"id":"references/tpl/arm/legacy","title":"arm.legacy","description":"Full IK/FK arm rig template module","source":"@site/docs/references/tpl/arm/legacy.md","sourceDirName":"references/tpl/arm","slug":"/references/tpl/arm/legacy","permalink":"/mikan-docs/docs/references/tpl/arm/legacy","draft":false,"unlisted":false,"editUrl":"https://github.com/citrus-software/mikan-docs/tree/main/packages/create-docusaurus/templates/shared/docs/references/tpl/arm/legacy.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"default","permalink":"/mikan-docs/docs/references/tpl/world/default"},"next":{"title":"digit.legacy","permalink":"/mikan-docs/docs/references/tpl/digit/legacy"}}');var t=l(4848),s=l(8453);const r={},c="arm.legacy",d={},o=[{value:"Overview",id:"overview",level:2},{value:"Template Structure",id:"template-structure",level:2},{value:"Options",id:"options",level:2},{value:"IK Stretching",id:"ik-stretching",level:3},{value:"Interpolation",id:"interpolation",level:3},{value:"Twist System",id:"twist-system",level:3},{value:"Not Yet Implemented",id:"not-yet-implemented",level:3}];function a(e){const n={blockquote:"blockquote",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"armlegacy",children:"arm.legacy"})}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsx)(n.p,{children:"Full IK/FK arm rig template module"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"arm.legacy"})," provides a complete arm rig with IK/FK blending. It shares a common module base with ",(0,t.jsx)(n.code,{children:"leg.legacy"})," and ",(0,t.jsx)(n.code,{children:"quad.legacy"}),", meaning their construction and logic are nearly identical."]}),"\n",(0,t.jsx)(n.h2,{id:"template-structure",children:"Template Structure"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"The root of the template marks the shoulder position."}),"\n",(0,t.jsx)(n.li,{children:"The rest of the chain defines the elbow, wrist, carpal, and fingertip."}),"\n",(0,t.jsxs)(n.li,{children:["You ",(0,t.jsx)(n.strong,{children:"do not"})," need to orient joints manually; orientation is handled automatically during rig build."]}),"\n",(0,t.jsxs)(n.li,{children:["An optional clavicle joint can be placed ",(0,t.jsx)(n.em,{children:"above"})," the shoulder joint. This acts as the pivot for the clavicle rig, which the arm will then be parented to."]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"options",children:"Options"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"clavicle"})," (",(0,t.jsx)(n.em,{children:"bool"}),", default: ",(0,t.jsx)(n.code,{children:"on"}),"): Enables the clavicle rig."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"reverse_lock"})," (",(0,t.jsx)(n.em,{children:"bool"}),", default: ",(0,t.jsx)(n.code,{children:"off"}),"): Enables a reverse foot-style locking system."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"effector_plane"})," (",(0,t.jsx)(n.em,{children:"enum"}),", default: ",(0,t.jsx)(n.code,{children:"z"}),"): Orientation vector used to auto-orient the wrist joint chain.","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"x"}),", ",(0,t.jsx)(n.code,{children:"y"}),", ",(0,t.jsx)(n.code,{children:"z"}),": World-space up vectors."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"auto"}),": Based on the plane formed by the joint positions (useful for wings)."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"ground"}),": Forces wrist orientation perpendicular to the ground plane (used for feet)."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"pv_space"})," (",(0,t.jsx)(n.em,{children:"node"}),", default: ",(0,t.jsx)(n.code,{children:"*::space.cog"}),"): Global parent space for the pole vector."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"pv_space_default"})," (",(0,t.jsx)(n.em,{children:"float"}),", ",(0,t.jsx)(n.code,{children:"0-1"}),", default: ",(0,t.jsx)(n.code,{children:"0"}),"): Default weight for the pole vector space switch."]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"ik-stretching",children:"IK Stretching"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"default_stretch"})," (",(0,t.jsx)(n.em,{children:"bool"}),", default: ",(0,t.jsx)(n.code,{children:"on"}),"): Enables IK stretching by default."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"soft_distance"})," (",(0,t.jsx)(n.em,{children:"float"}),", ",(0,t.jsx)(n.code,{children:"0-1"}),", default: ",(0,t.jsx)(n.code,{children:"0.05"}),"): Soft IK activation threshold relative to stretch distance."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"stomp_power"})," (",(0,t.jsx)(n.em,{children:"float"}),", ",(0,t.jsx)(n.code,{children:"-1 to 0"}),", default: ",(0,t.jsx)(n.code,{children:"-0.5"}),"): Volume compensation power factor. ",(0,t.jsx)(n.code,{children:"-0.5"})," corresponds to inverse square root falloff."]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"interpolation",children:"Interpolation"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"smooth_type"})," (",(0,t.jsx)(n.em,{children:"enum"}),", default: ",(0,t.jsx)(n.code,{children:"length"}),"): Mode for distributing intermediate joints along the limb.","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"length"}),": Interpolated along the deformation."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"parametric"}),": Interpolated at fixed parameter points."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"blend_joints"})," (",(0,t.jsx)(n.em,{children:"bool"}),", default: ",(0,t.jsx)(n.code,{children:"on"}),"): Enables skinning roll joints at key articulations."]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"twist-system",children:"Twist System"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"twist_joints_up"})," (",(0,t.jsx)(n.em,{children:"int"}),", min: ",(0,t.jsx)(n.code,{children:"2"}),", default: ",(0,t.jsx)(n.code,{children:"3"}),"): Number of twist joints between shoulder and elbow."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"twist_joints_dn"})," (",(0,t.jsx)(n.em,{children:"int"}),", min: ",(0,t.jsx)(n.code,{children:"2"}),", default: ",(0,t.jsx)(n.code,{children:"3"}),"): Number of twist joints between elbow and wrist."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"add_chains"})," (",(0,t.jsx)(n.em,{children:"list[str]"}),", optional): Adds multiple twist/shear chains for advanced deformation control."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"advanced_twist"})," (",(0,t.jsx)(n.em,{children:"bool"}),", default: ",(0,t.jsx)(n.code,{children:"off"}),"): Adds a correction rig for twist artifacts using extra attributes."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"space_switch"})," (",(0,t.jsx)(n.em,{children:"bool"}),", default: ",(0,t.jsx)(n.code,{children:"on"}),"): Enables default space switches on key controllers."]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"not-yet-implemented",children:"Not Yet Implemented"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"aim_axis"})," (",(0,t.jsx)(n.em,{children:"enum"}),", default: ",(0,t.jsx)(n.code,{children:"-y"}),"): Not yet supported."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"up_axis"})," (",(0,t.jsx)(n.em,{children:"enum"}),", default: ",(0,t.jsx)(n.code,{children:"-x"}),"): Not yet supported."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"up_axis2"})," (",(0,t.jsx)(n.em,{children:"enum"}),", default: ",(0,t.jsx)(n.code,{children:"z"}),"): Not yet supported."]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(a,{...e})}):a(e)}},8453:(e,n,l)=>{l.d(n,{R:()=>r,x:()=>c});var i=l(6540);const t={},s=i.createContext(t);function r(e){const n=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);