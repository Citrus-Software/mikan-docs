"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[650],{3221:(e,n,s)=>{s.d(n,{A:()=>i});const i=s.p+"assets/images/spline_curves-7f026ed2929043051b0aa055a73c8d7a.png"},8453:(e,n,s)=>{s.d(n,{R:()=>c,x:()=>o});var i=s(6540);const l={},r=i.createContext(l);function c(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:c(e.components),i.createElement(r.Provider,{value:n},e.children)}},8509:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>d,contentTitle:()=>o,default:()=>a,frontMatter:()=>c,metadata:()=>i,toc:()=>t});const i=JSON.parse('{"id":"references/tpl/rig/spline","title":"rig.spline","description":"Spline IK/FK rig module with twist, stretch, and volume control","source":"@site/docs/references/tpl/rig/spline.md","sourceDirName":"references/tpl/rig","slug":"/references/tpl/rig/spline","permalink":"/mikan-docs/docs/references/tpl/rig/spline","draft":false,"unlisted":false,"editUrl":"https://github.com/citrus-software/mikan-docs/tree/main/packages/create-docusaurus/templates/shared/docs/references/tpl/rig/spline.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"legacy","permalink":"/mikan-docs/docs/references/tpl/quad/legacy"},"next":{"title":"legacy","permalink":"/mikan-docs/docs/references/tpl/spine/legacy"}}');var l=s(4848),r=s(8453);const c={},o="rig.spline",d={},t=[{value:"Overview",id:"overview",level:2},{value:"How It Works",id:"how-it-works",level:3},{value:"Template Parameters",id:"template-parameters",level:2},{value:"Options",id:"options",level:2},{value:"Rig Hierarchy Options (from <code>core.bones</code>)",id:"rig-hierarchy-options-from-corebones",level:3},{value:"Orientation Controls",id:"orientation-controls",level:3}];function h(e){const n={a:"a",blockquote:"blockquote",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",img:"img",li:"li",ol:"ol",p:"p",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(n.header,{children:(0,l.jsx)(n.h1,{id:"rigspline",children:"rig.spline"})}),"\n",(0,l.jsxs)(n.blockquote,{children:["\n",(0,l.jsx)(n.p,{children:"Spline IK/FK rig module with twist, stretch, and volume control"}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.code,{children:"rig.spline"})," builds a hybrid IK/FK rig along a spline, supporting twist, soft volume preservation, and flexible skin joint creation. A good understanding of template chain configuration is crucial to constructing an effective rig."]}),"\n",(0,l.jsx)(n.h3,{id:"how-it-works",children:"How It Works"}),"\n",(0,l.jsxs)(n.ol,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"FK Chain:"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["Built similarly to ",(0,l.jsx)(n.code,{children:"core.bones"})," except the last joint is also a controller."]}),"\n",(0,l.jsx)(n.li,{children:"Each FK joint corresponds to a control vertex (CV) of the FK spline."}),"\n",(0,l.jsx)(n.li,{children:"FK controllers directly deform this base spline."}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"IK Controllers:"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"A number of IK controllers are distributed along the FK spline."}),"\n",(0,l.jsx)(n.li,{children:"The start and end controllers are placed at the beginning and end of the spline; others are spaced in between."}),"\n",(0,l.jsxs)(n.li,{children:["These IK controllers deform a ",(0,l.jsx)(n.em,{children:"second"})," curve that is reconstructed and skinned from the FK spline."]}),"\n",(0,l.jsx)(n.li,{children:"The second curve contains 2\xd7 the number of IK controllers in control vertices."}),"\n",(0,l.jsx)(n.li,{children:"Each IK controller affects two CVs, allowing axis scale to influence tangent behavior."}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Skin Joints:"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Created along the second IK spline."}),"\n",(0,l.jsx)(n.li,{children:"Count and placement are configurable."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.blockquote,{children:["\n",(0,l.jsx)(n.p,{children:"\u26a0\ufe0f If too many FK controllers are used relative to IK controllers, the rebuilt curve may lack the detail to accurately follow the original FK spline."}),"\n"]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.img,{alt:"viewport example",src:s(3221).A+"",width:"561",height:"447"})}),"\n",(0,l.jsx)(n.h2,{id:"template-parameters",children:"Template Parameters"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"numbers"})," (",(0,l.jsx)(n.em,{children:"int"}),"): Number of joints to create in the chain."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"root"})," (",(0,l.jsx)(n.em,{children:"float3"}),"): Position of the first joint relative to parent."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"transform"})," (",(0,l.jsx)(n.em,{children:"float3"}),"): Relative offset applied to each subsequent joint."]}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"options",children:"Options"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"iks"})," (",(0,l.jsx)(n.em,{children:"int"}),", min: ",(0,l.jsx)(n.code,{children:"2"}),", default: ",(0,l.jsx)(n.code,{children:"3"}),"): Number of IK controllers. Final IK spline will have 2\xd7 this number in control vertices."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"tweakers"})," (",(0,l.jsx)(n.em,{children:"enum"}),", default: ",(0,l.jsx)(n.code,{children:"off"}),"): Adds secondary animation controllers per skin joint.","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"off"}),": No tweakers."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"chained"}),": Tweakers follow a hierarchy."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"unchained"}),": Tweakers remain independent."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"bones"})," (",(0,l.jsx)(n.em,{children:"int"}),", default: ",(0,l.jsx)(n.code,{children:"0"}),"): Number of skin joints to create. Defaults to ",(0,l.jsx)(n.code,{children:"2\xd7 FK controllers - 1"})," if unspecified."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"bone_length"})," (",(0,l.jsx)(n.em,{children:"enum"}),", default: ",(0,l.jsx)(n.code,{children:"cvs"}),"): Distribution mode for skin joints.","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"parametric"}),": Evenly spaced along the spline parameter."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"cvs"}),": Based on FK controller CV positions."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"equal"}),": Joints evenly spaced by length."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"uniform_ik"})," (",(0,l.jsx)(n.em,{children:"bool"}),", default: ",(0,l.jsx)(n.code,{children:"on"}),"): IK controller distribution mode.","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"on"}),": Parametric placement."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"off"}),": Uniform length spacing."]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"fk_easing"})," (",(0,l.jsx)(n.em,{children:"enum"}),", default: ",(0,l.jsx)(n.code,{children:"off"}),"): FK influence smoothing mode.","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"off"}),": Each FK controller controls a single CV."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"in"}),": First controller affects first two CVs."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"out"}),": Last controller affects last two CVs."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"in-out"}),": Combines ",(0,l.jsx)(n.code,{children:"in"})," and ",(0,l.jsx)(n.code,{children:"out"})," easing."]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"default_stretch"})," (",(0,l.jsx)(n.em,{children:"bool"}),", default: ",(0,l.jsx)(n.code,{children:"off"}),"): Enables stretch behavior by default."]}),"\n"]}),"\n",(0,l.jsxs)(n.h3,{id:"rig-hierarchy-options-from-corebones",children:["Rig Hierarchy Options (from ",(0,l.jsx)(n.a,{href:"../core/bones",children:(0,l.jsx)(n.code,{children:"core.bones"})}),")"]}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"do_pose"})," (",(0,l.jsx)(n.em,{children:"bool"}),", default: ",(0,l.jsx)(n.code,{children:"off"}),"): Adds a pose node above the controller."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"add_nodes"})," (",(0,l.jsx)(n.em,{children:"str"})," | ",(0,l.jsx)(n.em,{children:"list[str]"}),"): Adds custom nodes in the hierarchy."]}),"\n"]}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"parent_scale"})," (",(0,l.jsx)(n.em,{children:"bool"}),", default: ",(0,l.jsx)(n.code,{children:"off"}),"): Enables scale propagation between controllers."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"flip_orient"})," (",(0,l.jsx)(n.em,{children:"bool"}),", default: ",(0,l.jsx)(n.code,{children:"off"}),"): Flips controller root orientation for symmetry."]}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"orientation-controls",children:"Orientation Controls"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"rotate_order"})," (",(0,l.jsx)(n.em,{children:"enum"}),", default: ",(0,l.jsx)(n.code,{children:"auto"}),"): Controller rotate order.","\n",(0,l.jsxs)(n.blockquote,{children:["\n",(0,l.jsx)(n.p,{children:"\u26a0\ufe0f Avoid changing unless necessary."}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"orient"})," (",(0,l.jsx)(n.em,{children:"enum"}),", default: ",(0,l.jsx)(n.code,{children:"auto"}),"): Orientation mode.","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"auto"}),": Automatically computed (recommended)."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"copy"}),": Copy orientation from template."]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"aim"})," (",(0,l.jsx)(n.em,{children:"str"}),", default: ",(0,l.jsx)(n.code,{children:"y"}),"): Main axis aligned toward next joint."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"up"})," (",(0,l.jsx)(n.em,{children:"str"}),", default: ",(0,l.jsx)(n.code,{children:"z"}),"): Secondary axis aligned using ",(0,l.jsx)(n.code,{children:"up_dir"}),"."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"up_dir"})," (",(0,l.jsx)(n.em,{children:"enum"}),", default: ",(0,l.jsx)(n.code,{children:"auto"}),"): Up vector calculation method.","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"auto"}),": Based on chain geometry."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"+x"}),", ",(0,l.jsx)(n.code,{children:"-x"}),", ",(0,l.jsx)(n.code,{children:"+y"}),", ",(0,l.jsx)(n.code,{children:"-y"}),", ",(0,l.jsx)(n.code,{children:"+z"}),", ",(0,l.jsx)(n.code,{children:"-z"}),": Scene-based up vectors."]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"up_auto"})," (",(0,l.jsx)(n.em,{children:"enum"}),", default: ",(0,l.jsx)(n.code,{children:"average"}),"): Up vector smoothing mode for ",(0,l.jsx)(n.code,{children:"auto"})," mode.","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"average"}),": Average of triangle normals."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"each"}),": Up vector calculated per joint."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"first"}),": Uses first triangle\u2019s up vector for all."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"last"}),": Uses last triangle\u2019s up vector for all."]}),"\n"]}),"\n"]}),"\n"]})]})}function a(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,l.jsx)(n,{...e,children:(0,l.jsx)(h,{...e})}):h(e)}}}]);